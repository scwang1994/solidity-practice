{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "name": "AddLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "name": "RemoveLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_revert_when_amountIn_is_zero",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_revert_when_tokenIn_is_not_tokenA_or_tokenB",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_revert_when_tokenIn_is_the_same_as_tokenOut",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_revert_when_tokenOut_is_not_tokenA_or_tokenB",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_should_be_able_to_swap_from_tokenA_to_tokenB",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_should_be_able_to_swap_from_tokenB_to_tokenA",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1572:26:7:-:0;;;1594:4;-1:-1:-1;;1572:26:7;;;;;;;;3161:44:10;;;;;;;;;;;481:17:33;122:3995:32;481:17:33;;122:3995:32;481:17:33;;;-1:-1:-1;;;481:17:33;;;;:8;:17::i;:::-;465:33;;;-1:-1:-1;;;;;;465:33:33;-1:-1:-1;;;;;465:33:33;;;;;;;;;;520:17;;;;;;;;;;;;-1:-1:-1;;;520:17:33;;;;;;:8;:17::i;:::-;504:33;;;-1:-1:-1;;;;;;504:33:33;-1:-1:-1;;;;;504:33:33;;;;;;;;;;666:2;644:24;;122:3995:32;;;;;;;;;;;;15385:125:11;15449:12;15483:20;15498:4;15483:14;:20::i;:::-;-1:-1:-1;15473:30:11;15385:125;-1:-1:-1;;15385:125:11:o;15104:242::-;15174:12;15188:18;15266:4;15249:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;15249:22:11;;;;;;;15239:33;;15249:22;15239:33;;;;-1:-1:-1;;;;;;15290:19:11;;;;;709:25:34;;;15239:33:11;-1:-1:-1;15290:7:11;;;;682:18:34;;15290:19:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15319:20;;-1:-1:-1;;;15319:20:11;;15283:26;;-1:-1:-1;15319:8:11;;;;:20;;15283:26;;15334:4;;15319:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15104:242;;;:::o;14:250:34:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:34;238:16;;231:27;14:250::o;269:289::-;400:3;438:6;432:13;454:66;513:6;508:3;501:4;493:6;489:17;454:66;:::i;:::-;536:16;;;;;269:289;-1:-1:-1;;269:289:34:o;745:290::-;815:6;868:2;856:9;847:7;843:23;839:32;836:52;;;884:1;881;874:12;836:52;910:16;;-1:-1:-1;;;;;955:31:34;;945:42;;935:70;;1001:1;998;991:12;935:70;1024:5;745:290;-1:-1:-1;;;745:290:34:o;1040:493::-;1246:1;1242;1237:3;1233:11;1229:19;1221:6;1217:32;1206:9;1199:51;1286:2;1281;1270:9;1266:18;1259:30;1180:4;1318:6;1312:13;1361:6;1356:2;1345:9;1341:18;1334:34;1377:79;1449:6;1444:2;1433:9;1429:18;1424:2;1416:6;1412:15;1377:79;:::i;:::-;1517:2;1496:15;-1:-1:-1;;1492:29:34;1477:45;;;;1524:2;1473:54;;1040:493;-1:-1:-1;;;1040:493:34:o;:::-;122:3995:32;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "122:3995:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;175:247;;;:::i;:::-;;2972:1143;;;:::i;2161:134:13:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1495:322:32;;;:::i;781:349::-;;;:::i;2930:133:13:-;;;:::i;2631:141::-;;;:::i;2447:178::-;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;1866:141::-;;;:::i;1819:584:7:-;;;:::i;:::-;;;3688:14:34;;3681:22;3663:41;;3651:2;3636:18;1819:584:7;3523:187:34;1823:1143:32;;;:::i;428:347::-;;;:::i;1136:353::-;;;:::i;2013:142:13:-;;;:::i;1572:26:7:-;;;;;;;;;175:247:32;218:13;:11;:13::i;:::-;241:15;271:14;;265:2;:20;;;;:::i;:::-;259:26;;:3;:26;:::i;:::-;241:44;;295:15;325:14;;319:2;:20;;;;:::i;:::-;313:26;;:3;:26;:::i;:::-;358:5;;349:15;;-1:-1:-1;;;349:15:32;;-1:-1:-1;;;;;358:5:32;;;349:15;;;5540:51:34;295:44:32;;-1:-1:-1;;;;;;;;;;;;349:8:32;;;5513:18:34;;349:15:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;374:10:32;;:41;;-1:-1:-1;;;374:41:32;;;;;5776:25:34;;;5817:18;;;5810:34;;;-1:-1:-1;;;;;374:10:32;;;;-1:-1:-1;374:23:32;;-1:-1:-1;5749:18:34;;374:41:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;208:214;;175:247::o;2972:1143::-;3076:6;;3120;;3168:14;;-1:-1:-1;;;;;3076:6:32;;;;3120;;;;3050:15;;3162:20;;:2;:20;:::i;:::-;3156:26;;:3;:26;:::i;:::-;3137:45;;3192:17;3223:14;;3217:2;:20;;;;:::i;:::-;3212:25;;:2;:25;:::i;:::-;3278:6;;3295:5;;3278:23;;-1:-1:-1;;;3278:23:32;;-1:-1:-1;;;;;3295:5:32;;;3278:23;;;5540:51:34;3192:45:32;;-1:-1:-1;3248:27:32;;3278:6;;;:16;;5513:18:34;;3278:23:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3341:6;;3358:5;;3341:23;;-1:-1:-1;;;3341:23:32;;-1:-1:-1;;;;;3358:5:32;;;3341:23;;;5540:51:34;3248:53:32;;-1:-1:-1;3311:27:32;;3341:6;;;:16;;5513:18:34;;3341:23:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3409:6;;3434:10;;3409:37;;-1:-1:-1;;;3409:37:32;;-1:-1:-1;;;;;3434:10:32;;;3409:37;;;5540:51:34;3311:53:32;;-1:-1:-1;3374:32:32;;3409:6;;;:16;;5513:18:34;;3409:37:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3491:6;;3516:10;;3491:37;;-1:-1:-1;;;3491:37:32;;-1:-1:-1;;;;;3516:10:32;;;3491:37;;;5540:51:34;3374:72:32;;-1:-1:-1;3456:32:32;;3491:6;;;:16;;5513:18:34;;3491:37:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3553:5;;3539:20;;-1:-1:-1;;;3539:20:32;;-1:-1:-1;;;;;3553:5:32;;;3539:20;;;5540:51:34;3456:72:32;;-1:-1:-1;;;;;;;;;;;;3539:13:32;;;5513:18:34;;3539:20:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3569:37:32;;-1:-1:-1;;;3569:37:32;;3583:4;3569:37;;;6562:41:34;;;6619:18;;;6612:50;;;6678:18;;;6671:50;;;6737:18;;;6730:50;-1:-1:-1;;;;;;;;;;;3569:13:32;-1:-1:-1;3569:13:32;;-1:-1:-1;6534:19:34;;3569:37:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3626:5:32;;3621:51;;;5776:25:34;;;5832:2;5817:18;;5810:34;;;-1:-1:-1;;;;;3621:51:32;;;;-1:-1:-1;3621:51:32;;;;-1:-1:-1;3626:5:32;;;;3621:51;;5749:18:34;3621:51:32;;;;;;;3682:10;;:44;;-1:-1:-1;;;3682:44:32;;-1:-1:-1;;;;;7049:15:34;;;3682:44:32;;;7031:34:34;7101:15;;;7081:18;;;7074:43;7133:18;;;7126:34;;;3682:10:32;;;;:15;;6966:18:34;;3682:44:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3745:6:32;;3770:5;;3745:32;;-1:-1:-1;;;3745:32:32;;-1:-1:-1;;;;;3770:5:32;;;3745:32;;;5540:51:34;3736:75:32;;3745:6;;;;;:16;;5513:18:34;;3745:32:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3779:31;3801:9;3779:19;:31;:::i;:::-;3736:8;:75::i;:::-;3830:6;;3855:5;;3830:32;;-1:-1:-1;;;3830:32:32;;-1:-1:-1;;;;;3855:5:32;;;3830:32;;;5540:51:34;3821:74:32;;3830:6;;;;;:16;;5513:18:34;;3830:32:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3864:30;3886:8;3864:19;:30;:::i;3821:74::-;3914:6;;3939:10;;3914:37;;-1:-1:-1;;;3914:37:32;;-1:-1:-1;;;;;3939:10:32;;;3914:37;;;5540:51:34;3905:85:32;;3914:6;;;;;:16;;5513:18:34;;3914:37:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3953:36;3980:9;3953:24;:36;:::i;3905:85::-;4009:6;;4034:10;;4009:37;;-1:-1:-1;;;4009:37:32;;-1:-1:-1;;;;;4034:10:32;;;4009:37;;;5540:51:34;4000:84:32;;4009:6;;;;;:16;;5513:18:34;;4009:37:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4048:35;4075:8;4048:24;:35;:::i;4000:84::-;317:28:8;309:37;;-1:-1:-1;;;;;4094:12:32;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3040:1075;;;;;;;;2972:1143::o;2161:134:13:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:13;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;1495:322:32:-;1583:6;;1627;;1684:5;;1675:15;;-1:-1:-1;;;1675:15:32;;-1:-1:-1;;;;;1684:5:32;;;1675:15;;;5540:51:34;1583:6:32;;;;1627;;;1557:15;;-1:-1:-1;;;;;;;;;;;1675:8:32;;;5513:18:34;;1675:15:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1700:56:32;;-1:-1:-1;;;1700:56:32;;7635:2:34;1700:56:32;;;7617:21:34;7674:2;7654:18;;;7647:30;7713:34;7693:18;;;7686:62;-1:-1:-1;;;7764:18:34;;;7757:35;-1:-1:-1;;;;;;;;;;;1700:15:32;-1:-1:-1;1700:15:32;;-1:-1:-1;7809:19:34;;1700:56:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1766:10:32;;:44;;-1:-1:-1;;;1766:44:32;;-1:-1:-1;;;;;7049:15:34;;;1766:44:32;;;7031:34:34;7101:15;;;7081:18;;;7074:43;7133:18;;;7126:34;;;1766:10:32;;;;-1:-1:-1;1766:15:32;;-1:-1:-1;6966:18:34;;1766:44:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1547:270;;;1495:322::o;781:349::-;885:6;;971:14;;-1:-1:-1;;;;;885:6:32;;;;859:15;;;;965:20;;:2;:20;:::i;:::-;960:25;;:2;:25;:::i;:::-;1005:5;;996:15;;-1:-1:-1;;;996:15:32;;-1:-1:-1;;;;;1005:5:32;;;996:15;;;5540:51:34;941:44:32;;-1:-1:-1;;;;;;;;;;;;996:8:32;;;5513:18:34;;996:15:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1021:48:32;;-1:-1:-1;;;1021:48:32;;8040:2:34;1021:48:32;;;8022:21:34;8079:2;8059:18;;;8052:30;8118:31;8098:18;;;8091:59;-1:-1:-1;;;;;;;;;;;1021:15:32;-1:-1:-1;1021:15:32;;-1:-1:-1;8167:18:34;;1021:48:32;7839:352:34;2930:133:13;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:13;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:13;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:7;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:7;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2985:55:7;3066:16;1980:374;;2196:43;;;-1:-1:-1;;;;;;;;;;;2196:43:7;;;8755:51:34;;;-1:-1:-1;;;8822:18:34;;;8815:34;2196:43:7;;;;;;;;;8728:18:34;;;2196:43:7;;;-1:-1:-1;;1671:64:7;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:7;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:7:o;1823:1143:32:-;1927:6;;1971;;2019:14;;-1:-1:-1;;;;;1927:6:32;;;;1971;;;;1901:15;;2013:20;;:2;:20;:::i;:::-;2007:26;;:3;:26;:::i;:::-;1988:45;;2043:17;2074:14;;2068:2;:20;;;;:::i;:::-;2063:25;;:2;:25;:::i;:::-;2129:6;;2146:5;;2129:23;;-1:-1:-1;;;2129:23:32;;-1:-1:-1;;;;;2146:5:32;;;2129:23;;;5540:51:34;2043:45:32;;-1:-1:-1;2099:27:32;;2129:6;;;:16;;5513:18:34;;2129:23:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2192:6;;2209:5;;2192:23;;-1:-1:-1;;;2192:23:32;;-1:-1:-1;;;;;2209:5:32;;;2192:23;;;5540:51:34;2099:53:32;;-1:-1:-1;2162:27:32;;2192:6;;;:16;;5513:18:34;;2192:23:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2260:6;;2285:10;;2260:37;;-1:-1:-1;;;2260:37:32;;-1:-1:-1;;;;;2285:10:32;;;2260:37;;;5540:51:34;2162:53:32;;-1:-1:-1;2225:32:32;;2260:6;;;:16;;5513:18:34;;2260:37:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2342:6;;2367:10;;2342:37;;-1:-1:-1;;;2342:37:32;;-1:-1:-1;;;;;2367:10:32;;;2342:37;;;5540:51:34;2225:72:32;;-1:-1:-1;2307:32:32;;2342:6;;;:16;;5513:18:34;;2342:37:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2404:5;;2390:20;;-1:-1:-1;;;2390:20:32;;-1:-1:-1;;;;;2404:5:32;;;2390:20;;;5540:51:34;2307:72:32;;-1:-1:-1;;;;;;;;;;;;2390:13:32;;;5513:18:34;;2390:20:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2420:37:32;;-1:-1:-1;;;2420:37:32;;2434:4;2420:37;;;6562:41:34;;;6619:18;;;6612:50;;;6678:18;;;6671:50;;;6737:18;;;6730:50;-1:-1:-1;;;;;;;;;;;2420:13:32;-1:-1:-1;2420:13:32;;-1:-1:-1;6534:19:34;;2420:37:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2477:5:32;;2472:51;;;5776:25:34;;;5832:2;5817:18;;5810:34;;;-1:-1:-1;;;;;2472:51:32;;;;-1:-1:-1;2472:51:32;;;;-1:-1:-1;2477:5:32;;;;2472:51;;5749:18:34;2472:51:32;;;;;;;2533:10;;:44;;-1:-1:-1;;;2533:44:32;;-1:-1:-1;;;;;7049:15:34;;;2533:44:32;;;7031:34:34;7101:15;;;7081:18;;;7074:43;7133:18;;;7126:34;;;2533:10:32;;;;:15;;6966:18:34;;2533:44:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2596:6:32;;2621:5;;2596:32;;-1:-1:-1;;;2596:32:32;;-1:-1:-1;;;;;2621:5:32;;;2596:32;;;5540:51:34;2587:74:32;;2596:6;;;;;:16;;5513:18:34;;2596:32:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2630:30;2652:8;2630:19;:30;:::i;2587:74::-;2680:6;;2705:5;;2680:32;;-1:-1:-1;;;2680:32:32;;-1:-1:-1;;;;;2705:5:32;;;2680:32;;;5540:51:34;2671:75:32;;2680:6;;;;;:16;;5513:18:34;;2680:32:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2714:31;2736:9;2714:19;:31;:::i;2671:75::-;2765:6;;2790:10;;2765:37;;-1:-1:-1;;;2765:37:32;;-1:-1:-1;;;;;2790:10:32;;;2765:37;;;5540:51:34;2756:84:32;;2765:6;;;;;:16;;5513:18:34;;2765:37:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2804:35;2831:8;2804:24;:35;:::i;2756:84::-;2859:6;;2884:10;;2859:37;;-1:-1:-1;;;2859:37:32;;-1:-1:-1;;;;;2884:10:32;;;2859:37;;;5540:51:34;2850:85:32;;2859:6;;;;;:16;;5513:18:34;;2859:37:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2898:36;2925:9;2898:24;:36;:::i;428:347::-;570:6;;617:14;;505:15;;-1:-1:-1;;;;;570:6:32;;505:15;;611:20;;:2;:20;:::i;:::-;606:25;;:2;:25;:::i;:::-;651:5;;642:15;;-1:-1:-1;;;642:15:32;;-1:-1:-1;;;;;651:5:32;;;642:15;;;5540:51:34;587:44:32;;-1:-1:-1;;;;;;;;;;;;642:8:32;;;5513:18:34;;642:15:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;667:47:32;;-1:-1:-1;;;667:47:32;;10024:2:34;667:47:32;;;10006:21:34;10063:2;10043:18;;;10036:30;10102;10082:18;;;10075:58;-1:-1:-1;;;;;;;;;;;667:15:32;-1:-1:-1;667:15:32;;-1:-1:-1;10150:18:34;;667:47:32;9823:351:34;1136:353:32;1239:6;;1330:14;;-1:-1:-1;;;;;1239:6:32;;;;;;1213:15;;1324:20;;:2;:20;:::i;:::-;1319:25;;:2;:25;:::i;:::-;1364:5;;1355:15;;-1:-1:-1;;;1355:15:32;;-1:-1:-1;;;;;1364:5:32;;;1355:15;;;5540:51:34;1300:44:32;;-1:-1:-1;;;;;;;;;;;;1355:8:32;;;5513:18:34;;1355:15:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1380:48:32;;-1:-1:-1;;;1380:48:32;;10380:2:34;1380:48:32;;;10362:21:34;10419:2;10399:18;;;10392:30;10458:31;10438:18;;;10431:59;-1:-1:-1;;;;;;;;;;;1380:15:32;-1:-1:-1;1380:15:32;;-1:-1:-1;10507:18:34;;1380:48:32;10179:352:34;2013:142:13;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:13;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;703:1025:33:-;754:31;;;;;:::i;:::-;10839:2:34;10821:21;;;10878:1;10858:18;;;10851:29;-1:-1:-1;;;10911:2:34;10896:18;;10889:37;10964:3;10957:4;10942:20;;10935:33;;;11005:1;10984:19;;;10977:30;-1:-1:-1;;;11038:3:34;11023:19;;11016:34;11082:3;11067:19;754:31:33;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;745:6:33;:40;;-1:-1:-1;;;;;;745:40:33;-1:-1:-1;;;;;745:40:33;;;;;;;;;;804:31;;;;;:::i;:::-;11400:2:34;11382:21;;;11439:1;11419:18;;;11412:29;-1:-1:-1;;;11472:2:34;11457:18;;11450:37;11525:3;11518:4;11503:20;;11496:33;;;11566:1;11545:19;;;11538:30;-1:-1:-1;;;11599:3:34;11584:19;;11577:34;11643:3;11628:19;804:31:33;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;795:6:33;:40;;-1:-1:-1;;;;;;795:40:33;-1:-1:-1;;;;;795:40:33;;;;;;;;;863:17;;;-1:-1:-1;;;863:17:33;;;;:15;;:17;;;;;;;;;;;;;;;795:40;863:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;846:34;;:14;:34;907:6;;:17;;;-1:-1:-1;;;907:17:33;;;;-1:-1:-1;;;;;907:6:33;;;;:15;;:17;;;;;;;;;;;;;;;:6;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;890:34;;:14;:34;970:6;;987;;947:48;;-1:-1:-1;;;;;970:6:33;;;;987;;;;947:48;;;:::i;:::-;-1:-1:-1;;;;;12166:15:34;;;12148:34;;12218:15;;12213:2;12198:18;;12191:43;12098:2;12083:18;947:48:33;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;934:10:33;:61;;-1:-1:-1;;;;;;934:61:33;-1:-1:-1;;;;;934:61:33;;;;;;1006:6;;1018:5;;1038:14;;1006:6;;;;:11;;1018:5;;;1032:20;;:2;:20;:::i;:::-;1025:27;;:4;:27;:::i;:::-;1006:47;;-1:-1:-1;;;;;;1006:47:33;;;;;;;-1:-1:-1;;;;;8773:32:34;;;1006:47:33;;;8755:51:34;8822:18;;;8815:34;8728:18;;1006:47:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1063:6:33;;1075:5;;1095:14;;-1:-1:-1;;;;;1063:6:33;;;;-1:-1:-1;1063:11:33;;-1:-1:-1;1075:5:33;;;1089:20;;:2;:20;:::i;:::-;1082:27;;:4;:27;:::i;:::-;1063:47;;-1:-1:-1;;;;;;1063:47:33;;;;;;;-1:-1:-1;;;;;8773:32:34;;;1063:47:33;;;8755:51:34;8822:18;;;8815:34;8728:18;;1063:47:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1120:6:33;;1132:5;;1152:14;;-1:-1:-1;;;;;1120:6:33;;;;-1:-1:-1;1120:11:33;;-1:-1:-1;1132:5:33;;;1146:20;;:2;:20;:::i;:::-;1139:27;;:4;:27;:::i;:::-;1120:47;;-1:-1:-1;;;;;;1120:47:33;;;;;;;-1:-1:-1;;;;;8773:32:34;;;1120:47:33;;;8755:51:34;8822:18;;;8815:34;8728:18;;1120:47:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1177:6:33;;1189:5;;1209:14;;-1:-1:-1;;;;;1177:6:33;;;;-1:-1:-1;1177:11:33;;-1:-1:-1;1189:5:33;;;1203:20;;:2;:20;:::i;:::-;1196:27;;:4;:27;:::i;:::-;1177:47;;-1:-1:-1;;;;;;1177:47:33;;;;;;;-1:-1:-1;;;;;8773:32:34;;;1177:47:33;;;8755:51:34;8822:18;;;8815:34;8728:18;;1177:47:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1249:5:33;;1235:20;;-1:-1:-1;;;1235:20:33;;-1:-1:-1;;;;;1249:5:33;;;1235:20;;;5540:51:34;-1:-1:-1;;;;;;;;;;;1235:13:33;-1:-1:-1;1235:13:33;;-1:-1:-1;5513:18:34;;1235:20:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1265:6:33;;1288:10;;1314:14;;-1:-1:-1;;;;;1265:6:33;;;;-1:-1:-1;1265:14:33;;-1:-1:-1;1288:10:33;;;1308:20;;:2;:20;:::i;:::-;1301:27;;:4;:27;:::i;:::-;1265:64;;-1:-1:-1;;;;;;1265:64:33;;;;;;;-1:-1:-1;;;;;8773:32:34;;;1265:64:33;;;8755:51:34;8822:18;;;8815:34;8728:18;;1265:64:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1339:6:33;;1362:10;;1388:14;;-1:-1:-1;;;;;1339:6:33;;;;:14;;1362:10;;1382:20;;:2;:20;:::i;:::-;1375:27;;:4;:27;:::i;:::-;1339:64;;-1:-1:-1;;;;;;1339:64:33;;;;;;;-1:-1:-1;;;;;8773:32:34;;;1339:64:33;;;8755:51:34;8822:18;;;8815:34;8728:18;;1339:64:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;317:28:8;309:37;;-1:-1:-1;;;;;1413:12:33;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1452:5:33;;1438:20;;-1:-1:-1;;;1438:20:33;;-1:-1:-1;;;;;1452:5:33;;;1438:20;;;5540:51:34;-1:-1:-1;;;;;;;;;;;1438:13:33;-1:-1:-1;1438:13:33;;-1:-1:-1;5513:18:34;;1438:20:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1468:6:33;;1491:10;;1517:14;;-1:-1:-1;;;;;1468:6:33;;;;-1:-1:-1;1468:14:33;;-1:-1:-1;1491:10:33;;;1511:20;;:2;:20;:::i;:::-;1504:27;;:4;:27;:::i;:::-;1468:64;;-1:-1:-1;;;;;;1468:64:33;;;;;;;-1:-1:-1;;;;;8773:32:34;;;1468:64:33;;;8755:51:34;8822:18;;;8815:34;8728:18;;1468:64:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1542:6:33;;1565:10;;1591:14;;-1:-1:-1;;;;;1542:6:33;;;;:14;;1565:10;;1585:20;;:2;:20;:::i;:::-;1578:27;;:4;:27;:::i;:::-;1542:64;;-1:-1:-1;;;;;;1542:64:33;;;;;;;-1:-1:-1;;;;;8773:32:34;;;1542:64:33;;;8755:51:34;8822:18;;;8815:34;8728:18;;1542:64:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;317:28:8;309:37;;-1:-1:-1;;;;;1616:12:33;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1658:6:33;;1641:35;;;-1:-1:-1;;;1641:35:33;;-1:-1:-1;;;;;1658:6:33;;;1641:35;;;12736:51:34;12803:18;;;12796:30;12862:1;12842:18;;;12835:29;-1:-1:-1;;;12880:18:34;;;12873:36;-1:-1:-1;;;;;;;;;;;1641:8:33;-1:-1:-1;1641:8:33;;-1:-1:-1;12926:19:34;;1641:35:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1703:6:33;;1686:35;;;-1:-1:-1;;;1686:35:33;;-1:-1:-1;;;;;1703:6:33;;;1686:35;;;13168:51:34;13235:18;;;13228:30;13294:1;13274:18;;;13267:29;-1:-1:-1;;;13312:18:34;;;13305:36;-1:-1:-1;;;;;;;;;;;1686:8:33;-1:-1:-1;1686:8:33;;-1:-1:-1;13358:19:34;;1686:35:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5209:262:7;5271:1;5266;:6;5262:203;;5293:41;;;;;13590:2:34;13572:21;;;13629:2;13609:18;;;13602:30;13668:34;13663:2;13648:18;;13641:62;-1:-1:-1;;;13734:2:34;13719:18;;13712:32;13776:3;13761:19;;13388:398;5293:41:7;;;;;;;;5353:31;;;14003:21:34;;;14060:2;14040:18;;;14033:30;-1:-1:-1;;;14094:2:34;14079:18;;14072:40;14179:4;14164:20;;14157:36;;;5353:31:7;;;;;;;14144:3:34;5353:31:7;;;5403;;;14416:21:34;;;14473:2;14453:18;;;14446:30;-1:-1:-1;;;14507:2:34;14492:18;;14485:40;14592:4;14577:20;;14570:36;;;5403:31:7;;;;;;;14557:3:34;5403:31:7;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;2409:432::-;-1:-1:-1;;;;;;;;;;;2985:55:7;3066:16;2452:359;;2652:67;;;-1:-1:-1;;;;;;;;;;;2652:67:7;;;14819:51:34;;;-1:-1:-1;;;14886:18:34;;;14879:34;;;;2712:4:7;14929:18:34;;;14922:34;2489:11:7;;1671:64;2586:43;;14792:18:34;;2652:67:7;;;-1:-1:-1;;2652:67:7;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:7;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:7;2820:7;:14;;-1:-1:-1;;2820:14:7;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:658:34:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:34;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:34;;14:658;-1:-1:-1;;;;;;14:658:34:o;677:1567::-;879:4;908:2;948;937:9;933:18;978:2;967:9;960:21;1001:6;1036;1030:13;1067:6;1059;1052:22;1093:2;1083:12;;1126:2;1115:9;1111:18;1104:25;;1188:2;1178:6;1175:1;1171:14;1160:9;1156:30;1152:39;1226:2;1218:6;1214:15;1247:1;1268;1278:937;1294:6;1289:3;1286:15;1278:937;;;1363:22;;;-1:-1:-1;;1359:36:34;1347:49;;1419:13;;1506:9;;-1:-1:-1;;;;;1502:35:34;1487:51;;1577:11;;1571:18;1609:15;;;1602:27;;;1690:19;;1459:15;;;1722:24;;;1812:21;;;;1857:1;;1780:2;1768:15;;;1871:236;1887:8;1882:3;1879:17;1871:236;;;1968:15;;-1:-1:-1;;;;;;1964:42:34;1950:57;;2076:17;;;;1915:1;1906:11;;;;;2033:14;;;;1871:236;;;-1:-1:-1;2193:12:34;;;;2130:5;-1:-1:-1;;;2158:15:34;;;;1320:1;1311:11;1278:937;;;-1:-1:-1;2232:6:34;;677:1567;-1:-1:-1;;;;;;;;;677:1567:34:o;2249:250::-;2334:1;2344:113;2358:6;2355:1;2352:13;2344:113;;;2434:11;;;2428:18;2415:11;;;2408:39;2380:2;2373:10;2344:113;;;-1:-1:-1;;2491:1:34;2473:16;;2466:27;2249:250::o;2504:1014::-;2666:4;2695:2;2735;2724:9;2720:18;2765:2;2754:9;2747:21;2788:6;2823;2817:13;2854:6;2846;2839:22;2892:2;2881:9;2877:18;2870:25;;2954:2;2944:6;2941:1;2937:14;2926:9;2922:30;2918:39;2904:53;;2992:2;2984:6;2980:15;3013:1;3023:466;3037:6;3034:1;3031:13;3023:466;;;3102:22;;;-1:-1:-1;;3098:36:34;3086:49;;3158:13;;3200:9;;3222:24;;;3259:74;3200:9;3307:15;;;3294:11;;;3259:74;:::i;:::-;3399:2;3376:17;-1:-1:-1;;3372:31:34;3360:44;;;;3356:53;;;-1:-1:-1;3467:12:34;;;;3432:15;;;;3059:1;3052:9;3023:466;;;-1:-1:-1;3506:6:34;;2504:1014;-1:-1:-1;;;;;;;2504:1014:34:o;3715:127::-;3776:10;3771:3;3767:20;3764:1;3757:31;3807:4;3804:1;3797:15;3831:4;3828:1;3821:15;3847:422;3936:1;3979:5;3936:1;3993:270;4014:7;4004:8;4001:21;3993:270;;;4073:4;4069:1;4065:6;4061:17;4055:4;4052:27;4049:53;;;4082:18;;:::i;:::-;4132:7;4122:8;4118:22;4115:55;;;4152:16;;;;4115:55;4231:22;;;;4191:15;;;;3993:270;;;3997:3;3847:422;;;;;:::o;4274:806::-;4323:5;4353:8;4343:80;;-1:-1:-1;4394:1:34;4408:5;;4343:80;4442:4;4432:76;;-1:-1:-1;4479:1:34;4493:5;;4432:76;4524:4;4542:1;4537:59;;;;4610:1;4605:130;;;;4517:218;;4537:59;4567:1;4558:10;;4581:5;;;4605:130;4642:3;4632:8;4629:17;4626:43;;;4649:18;;:::i;:::-;-1:-1:-1;;4705:1:34;4691:16;;4720:5;;4517:218;;4819:2;4809:8;4806:16;4800:3;4794:4;4791:13;4787:36;4781:2;4771:8;4768:16;4763:2;4757:4;4754:12;4750:35;4747:77;4744:159;;;-1:-1:-1;4856:19:34;;;4888:5;;4744:159;4935:34;4960:8;4954:4;4935:34;:::i;:::-;5005:6;5001:1;4997:6;4993:19;4984:7;4981:32;4978:58;;;5016:18;;:::i;:::-;5054:20;;-1:-1:-1;4274:806:34;;;;;:::o;5085:131::-;5145:5;5174:36;5201:8;5195:4;5174:36;:::i;:::-;5165:45;5085:131;-1:-1:-1;;;5085:131:34:o;5221:168::-;5294:9;;;5325;;5342:15;;;5336:22;;5322:37;5312:71;;5363:18;;:::i;5855:306::-;5943:6;5951;5959;6012:2;6000:9;5991:7;5987:23;5983:32;5980:52;;;6028:1;6025;6018:12;5980:52;6057:9;6051:16;6041:26;;6107:2;6096:9;6092:18;6086:25;6076:35;;6151:2;6140:9;6136:18;6130:25;6120:35;;5855:306;;;;;:::o;6166:184::-;6236:6;6289:2;6277:9;6268:7;6264:23;6260:32;6257:52;;;6305:1;6302;6295:12;6257:52;-1:-1:-1;6328:16:34;;6166:184;-1:-1:-1;6166:184:34:o;7171:125::-;7236:9;;;7257:10;;;7254:36;;;7270:18;;:::i;7301:128::-;7368:9;;;7389:11;;;7386:37;;;7403:18;;:::i;8196:380::-;8275:1;8271:12;;;;8318;;;8339:61;;8393:4;8385:6;8381:17;8371:27;;8339:61;8446:2;8438:6;8435:14;8415:18;8412:38;8409:161;;8492:10;8487:3;8483:20;8480:1;8473:31;8527:4;8524:1;8517:15;8555:4;8552:1;8545:15;8409:161;;8196:380;;;:::o;8860:384::-;-1:-1:-1;;;;;;9045:33:34;;9033:46;;9102:13;;9015:3;;9124:74;9102:13;9187:1;9178:11;;9171:4;9159:17;;9124:74;:::i;:::-;9218:16;;;;9236:1;9214:24;;8860:384;-1:-1:-1;;;8860:384:34:o;9249:287::-;9378:3;9416:6;9410:13;9432:66;9491:6;9486:3;9479:4;9471:6;9467:17;9432:66;:::i;:::-;9514:16;;;;;9249:287;-1:-1:-1;;9249:287:34:o;9541:277::-;9608:6;9661:2;9649:9;9640:7;9636:23;9632:32;9629:52;;;9677:1;9674;9667:12;9629:52;9709:9;9703:16;9762:5;9755:13;9748:21;9741:5;9738:32;9728:60;;9784:1;9781;9774:12;11658:273;11726:6;11779:2;11767:9;11758:7;11754:23;11750:32;11747:52;;;11795:1;11792;11785:12;11747:52;11827:9;11821:16;11877:4;11870:5;11866:16;11859:5;11856:27;11846:55;;11897:1;11894;11887:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_revert_when_amountIn_is_zero()": "32fdd946",
    "test_revert_when_tokenIn_is_not_tokenA_or_tokenB()": "bce5ff79",
    "test_revert_when_tokenIn_is_the_same_as_tokenOut()": "cba202d8",
    "test_revert_when_tokenOut_is_not_tokenA_or_tokenB()": "392bd3cf",
    "test_should_be_able_to_swap_from_tokenA_to_tokenB()": "bb2dfdaf",
    "test_should_be_able_to_swap_from_tokenB_to_tokenA()": "136444b1"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_revert_when_amountIn_is_zero\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_revert_when_tokenIn_is_not_tokenA_or_tokenB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_revert_when_tokenIn_is_the_same_as_tokenOut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_revert_when_tokenOut_is_not_tokenA_or_tokenB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_should_be_able_to_swap_from_tokenA_to_tokenB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_should_be_able_to_swap_from_tokenB_to_tokenA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/SimpleSwap.swap.t.sol\":\"SimpleSwapSwapTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/SimpleSwap.sol\":{\"keccak256\":\"0x259ee1a77391c8e4442844c2fe375f0c97f8851a270aacedf03bb04dd6b4c1d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bc2725f8290e958648a69b86228653a4bec2eed2358dd3033e1f2a21fc46d4c\",\"dweb:/ipfs/QmX4zk52ieRbDbdaFfhxMWm1C6xUYVxXnuVwjEu1Efg6Kf\"]},\"contracts/interface/IERC20.sol\":{\"keccak256\":\"0x61db17aebc5d812c7002d15c1da954065e56abe49d64b14c034abe5604d70eb3\",\"urls\":[\"bzz-raw://b006685e753f9120469f10b09c159f222d4cb8b507a6c1f0c14ed50c883ebe66\",\"dweb:/ipfs/QmSyY7iTugbczPwfGK67etiyPULenYGzzRYbt8aabwwkUb\"]},\"contracts/interface/ISimpleSwap.sol\":{\"keccak256\":\"0x699bba18b8ff068ec52c1be290341820357c8de90d63812a21bc6cfae5760a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://168272fd8ed425ade969005b973c8a5262da077eaee50c0d4daa012ab3bccc1c\",\"dweb:/ipfs/Qmb7J7WfRpySBV8dkr4anfyKGYWRYpt5YwnBmu5qDuECM6\"]},\"contracts/libraries/Math.sol\":{\"keccak256\":\"0x4dd382bdd3357157ef9f06235a4f7f682dd8fe4ee9723d6e351b58adf309a990\",\"urls\":[\"bzz-raw://9ee92b594c3e89ad22c0938fb0a97696e8436c87c4c45b2d3c4e880ea2bae27c\",\"dweb:/ipfs/QmUybN45sS1EXoKwxM6t6bLi1jsawuSSV7sTNA616VSCye\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xf4f716ac3805f004e4a58113fb0b3b314036bd3f377a3a05079876a80e41d31e\",\"urls\":[\"bzz-raw://d0b6f68d31110318ad9044c8d2c892561be5ce9ab1ee13975b67460d67f7db01\",\"dweb:/ipfs/QmcgcJ5f1NfZdTmPZHsxzxvvhoW5UojwNoMnvpPYbKtLsM\"]},\"contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0x2312c12f83d48bcee24109bee78be9973b57698ef6de7d33fe5f2fdc64f302de\",\"urls\":[\"bzz-raw://303276fcd26e4985cb8c3c25e8459d86a8c39557aac140d4e48457f4f9d215b8\",\"dweb:/ipfs/Qmcqt3Z2i2r3Zfq1u5sXZFciCxgySJp3AzjCLNEahKzUZd\"]},\"contracts/test/TestERC20.sol\":{\"keccak256\":\"0xea0e05feb1ae06e2d4eb065fcc6f381eb8c545ebf4239501870dc4dd3dc79c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://369971b16a303eb0afeba1ec19aa4d23355ca85fa95513f3d1bcc6804022767b\",\"dweb:/ipfs/QmSXGWgEnr8YuQVeVWUxPSv6MtsjMJwFyzTcUjmGakWLpz\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0e6f32877ab26a83c9334eb5a000bf326bd2a0b04fea8647e045cea9c445f534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8965978bfa66ddab8db95449a96ee47d44c62ebcb4271ab293e847f359a2ba7d\",\"dweb:/ipfs/QmazxpekoHnno4ySoNUct7NcKx6UJR7UvcMtJ9JYsBDEUh\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xce33e7c67d273bd32e324c347a5fc7b8815fb7d4880a1bc6569409b2e91f0017\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91a2c8facd01ee5242135a4f1b368f99fc087574c2b8ebb3e2bdec9af8be0e07\",\"dweb:/ipfs/QmStG1wYSPXMEirv9nsA9p4EjzGRtoH999czMxGMj8KHhM\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x06f0761a502a8dc74c06029c603831780ff32f1e85dad2ae0f810b7545fba09b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70e940ed53ef0270d1d6f3215fcccf92dd675f8ec4a59e1fbd0535e0d52fb46c\",\"dweb:/ipfs/QmPTkXXzGKFyWBmbQPrL6Yg4ECWmu3LndSH9ex2E3czZuF\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"test/foundry/SimpleSwap.swap.t.sol\":{\"keccak256\":\"0x8a48c4bd582bfa5d5ad7ef791782598ba84630ee6fa8e7526c500010cd71617e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73b72f65ed49c6b54b16d08361284a614ccc445a5988b972402922fdbd5fccbd\",\"dweb:/ipfs/QmT1brHtx7ZAhajRudNCUgi85YbHKj6Vkhvedbwutniwja\"]},\"test/foundry/helper/SimpleSwapSetUp.sol\":{\"keccak256\":\"0xa4476fa233b69b379db2a01df601badf51e10e872a422fb0b4de6bd464a15692\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://2bd4119c90f5b9166aa1ebb8824e0a0bb5854fd0c6d2bd0722898f93faca9b1a\",\"dweb:/ipfs/QmZGRtgAPywp47pKPD21cgvuntG2VUvvnfmKChx8ZuMoh7\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amountA",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountB",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "liquidity",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddLiquidity",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amountA",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountB",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "liquidity",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RemoveLiquidity",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Swap",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_revert_when_amountIn_is_zero"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_revert_when_tokenIn_is_not_tokenA_or_tokenB"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_revert_when_tokenIn_is_the_same_as_tokenOut"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_revert_when_tokenOut_is_not_tokenA_or_tokenB"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_should_be_able_to_swap_from_tokenA_to_tokenB"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_should_be_able_to_swap_from_tokenB_to_tokenA"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/SimpleSwap.swap.t.sol": "SimpleSwapSwapTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/SimpleSwap.sol": {
        "keccak256": "0x259ee1a77391c8e4442844c2fe375f0c97f8851a270aacedf03bb04dd6b4c1d6",
        "urls": [
          "bzz-raw://7bc2725f8290e958648a69b86228653a4bec2eed2358dd3033e1f2a21fc46d4c",
          "dweb:/ipfs/QmX4zk52ieRbDbdaFfhxMWm1C6xUYVxXnuVwjEu1Efg6Kf"
        ],
        "license": "MIT"
      },
      "contracts/interface/IERC20.sol": {
        "keccak256": "0x61db17aebc5d812c7002d15c1da954065e56abe49d64b14c034abe5604d70eb3",
        "urls": [
          "bzz-raw://b006685e753f9120469f10b09c159f222d4cb8b507a6c1f0c14ed50c883ebe66",
          "dweb:/ipfs/QmSyY7iTugbczPwfGK67etiyPULenYGzzRYbt8aabwwkUb"
        ],
        "license": null
      },
      "contracts/interface/ISimpleSwap.sol": {
        "keccak256": "0x699bba18b8ff068ec52c1be290341820357c8de90d63812a21bc6cfae5760a3e",
        "urls": [
          "bzz-raw://168272fd8ed425ade969005b973c8a5262da077eaee50c0d4daa012ab3bccc1c",
          "dweb:/ipfs/Qmb7J7WfRpySBV8dkr4anfyKGYWRYpt5YwnBmu5qDuECM6"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Math.sol": {
        "keccak256": "0x4dd382bdd3357157ef9f06235a4f7f682dd8fe4ee9723d6e351b58adf309a990",
        "urls": [
          "bzz-raw://9ee92b594c3e89ad22c0938fb0a97696e8436c87c4c45b2d3c4e880ea2bae27c",
          "dweb:/ipfs/QmUybN45sS1EXoKwxM6t6bLi1jsawuSSV7sTNA616VSCye"
        ],
        "license": null
      },
      "contracts/libraries/SafeMath.sol": {
        "keccak256": "0xf4f716ac3805f004e4a58113fb0b3b314036bd3f377a3a05079876a80e41d31e",
        "urls": [
          "bzz-raw://d0b6f68d31110318ad9044c8d2c892561be5ce9ab1ee13975b67460d67f7db01",
          "dweb:/ipfs/QmcgcJ5f1NfZdTmPZHsxzxvvhoW5UojwNoMnvpPYbKtLsM"
        ],
        "license": null
      },
      "contracts/libraries/UQ112x112.sol": {
        "keccak256": "0x2312c12f83d48bcee24109bee78be9973b57698ef6de7d33fe5f2fdc64f302de",
        "urls": [
          "bzz-raw://303276fcd26e4985cb8c3c25e8459d86a8c39557aac140d4e48457f4f9d215b8",
          "dweb:/ipfs/Qmcqt3Z2i2r3Zfq1u5sXZFciCxgySJp3AzjCLNEahKzUZd"
        ],
        "license": null
      },
      "contracts/test/TestERC20.sol": {
        "keccak256": "0xea0e05feb1ae06e2d4eb065fcc6f381eb8c545ebf4239501870dc4dd3dc79c87",
        "urls": [
          "bzz-raw://369971b16a303eb0afeba1ec19aa4d23355ca85fa95513f3d1bcc6804022767b",
          "dweb:/ipfs/QmSXGWgEnr8YuQVeVWUxPSv6MtsjMJwFyzTcUjmGakWLpz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0e6f32877ab26a83c9334eb5a000bf326bd2a0b04fea8647e045cea9c445f534",
        "urls": [
          "bzz-raw://8965978bfa66ddab8db95449a96ee47d44c62ebcb4271ab293e847f359a2ba7d",
          "dweb:/ipfs/QmazxpekoHnno4ySoNUct7NcKx6UJR7UvcMtJ9JYsBDEUh"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xce33e7c67d273bd32e324c347a5fc7b8815fb7d4880a1bc6569409b2e91f0017",
        "urls": [
          "bzz-raw://91a2c8facd01ee5242135a4f1b368f99fc087574c2b8ebb3e2bdec9af8be0e07",
          "dweb:/ipfs/QmStG1wYSPXMEirv9nsA9p4EjzGRtoH999czMxGMj8KHhM"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x06f0761a502a8dc74c06029c603831780ff32f1e85dad2ae0f810b7545fba09b",
        "urls": [
          "bzz-raw://70e940ed53ef0270d1d6f3215fcccf92dd675f8ec4a59e1fbd0535e0d52fb46c",
          "dweb:/ipfs/QmPTkXXzGKFyWBmbQPrL6Yg4ECWmu3LndSH9ex2E3czZuF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "test/foundry/SimpleSwap.swap.t.sol": {
        "keccak256": "0x8a48c4bd582bfa5d5ad7ef791782598ba84630ee6fa8e7526c500010cd71617e",
        "urls": [
          "bzz-raw://73b72f65ed49c6b54b16d08361284a614ccc445a5988b972402922fdbd5fccbd",
          "dweb:/ipfs/QmT1brHtx7ZAhajRudNCUgi85YbHKj6Vkhvedbwutniwja"
        ],
        "license": "MIT"
      },
      "test/foundry/helper/SimpleSwapSetUp.sol": {
        "keccak256": "0xa4476fa233b69b379db2a01df601badf51e10e872a422fb0b4de6bd464a15692",
        "urls": [
          "bzz-raw://2bd4119c90f5b9166aa1ebb8824e0a0bb5854fd0c6d2bd0722898f93faca9b1a",
          "dweb:/ipfs/QmZGRtgAPywp47pKPD21cgvuntG2VUvvnfmKChx8ZuMoh7"
        ],
        "license": "SEE LICENSE IN LICENSE"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/SimpleSwap.swap.t.sol",
    "id": 34755,
    "exportedSymbols": {
      "SimpleSwapSetUp": [
        34988
      ],
      "SimpleSwapSwapTest": [
        34754
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4086:32",
    "nodes": [
      {
        "id": 34218,
        "nodeType": "PragmaDirective",
        "src": "32:23:32",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 34220,
        "nodeType": "ImportDirective",
        "src": "57:63:32",
        "nodes": [],
        "absolutePath": "test/foundry/helper/SimpleSwapSetUp.sol",
        "file": "./helper/SimpleSwapSetUp.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34755,
        "sourceUnit": 34989,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34219,
              "name": "SimpleSwapSetUp",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34988,
              "src": "66:15:32",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34754,
        "nodeType": "ContractDefinition",
        "src": "122:3995:32",
        "nodes": [
          {
            "id": 34261,
            "nodeType": "FunctionDefinition",
            "src": "175:247:32",
            "nodes": [],
            "body": {
              "id": 34260,
              "nodeType": "Block",
              "src": "208:214:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34226,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "218:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SimpleSwapSwapTest_$34754_$",
                          "typeString": "type(contract super SimpleSwapSwapTest)"
                        }
                      },
                      "id": 34228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "224:5:32",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34987,
                      "src": "218:11:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 34229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "218:13:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34230,
                  "nodeType": "ExpressionStatement",
                  "src": "218:13:32"
                },
                {
                  "assignments": [
                    34232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34232,
                      "mutability": "mutable",
                      "name": "amountA",
                      "nameLocation": "249:7:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34260,
                      "src": "241:15:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34231,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "241:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34238,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "313030",
                      "id": 34233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "259:3:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 34236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 34234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "265:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "id": 34235,
                        "name": "tokenADecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34788,
                        "src": "271:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "265:20:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "259:26:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "241:44:32"
                },
                {
                  "assignments": [
                    34240
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34240,
                      "mutability": "mutable",
                      "name": "amountB",
                      "nameLocation": "303:7:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34260,
                      "src": "295:15:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34239,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "295:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34246,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "313030",
                      "id": 34241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "313:3:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 34244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 34242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "319:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "id": 34243,
                        "name": "tokenBDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34790,
                        "src": "325:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "319:20:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "313:26:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "295:44:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34250,
                        "name": "maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34780,
                        "src": "358:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34247,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3471,
                        "src": "349:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "352:5:32",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13533,
                      "src": "349:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 34251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "349:15:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34252,
                  "nodeType": "ExpressionStatement",
                  "src": "349:15:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34256,
                        "name": "amountA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34232,
                        "src": "398:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34257,
                        "name": "amountB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34240,
                        "src": "407:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34253,
                        "name": "simpleSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34796,
                        "src": "374:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleSwap_$697",
                          "typeString": "contract SimpleSwap"
                        }
                      },
                      "id": 34255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "385:12:32",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 442,
                      "src": "374:23:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 34258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "374:41:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "id": 34259,
                  "nodeType": "ExpressionStatement",
                  "src": "374:41:32"
                }
              ]
            },
            "baseFunctions": [
              34987
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "184:5:32",
            "overrides": {
              "id": 34224,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "199:8:32"
            },
            "parameters": {
              "id": 34223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "189:2:32"
            },
            "returnParameters": {
              "id": 34225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "208:0:32"
            },
            "scope": 34754,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34307,
            "nodeType": "FunctionDefinition",
            "src": "428:347:32",
            "nodes": [],
            "body": {
              "id": 34306,
              "nodeType": "Block",
              "src": "495:280:32",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34265,
                      "mutability": "mutable",
                      "name": "tokenIn",
                      "nameLocation": "513:7:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34306,
                      "src": "505:15:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 34264,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "505:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34270,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 34268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "531:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 34267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "523:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 34266,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "523:7:32",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 34269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "523:10:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "505:28:32"
                },
                {
                  "assignments": [
                    34272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34272,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nameLocation": "551:8:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34306,
                      "src": "543:16:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 34271,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "543:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34277,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34275,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34786,
                        "src": "570:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      ],
                      "id": 34274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "562:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 34273,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "562:7:32",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 34276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "562:15:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "543:34:32"
                },
                {
                  "assignments": [
                    34279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34279,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "595:8:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34306,
                      "src": "587:16:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34278,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "587:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34285,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 34280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "606:2:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 34283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 34281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "611:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "id": 34282,
                        "name": "tokenADecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34788,
                        "src": "617:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "611:20:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "606:25:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "587:44:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34289,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34775,
                        "src": "651:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34286,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3471,
                        "src": "642:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "645:5:32",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13533,
                      "src": "642:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 34290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "642:15:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34291,
                  "nodeType": "ExpressionStatement",
                  "src": "642:15:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "53696d706c65537761703a20494e56414c49445f544f4b454e5f494e",
                        "id": 34295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "683:30:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19009e513bbcc3c948fb90f4fbc2427039c5705efb18abf72f11223861fb834c",
                          "typeString": "literal_string \"SimpleSwap: INVALID_TOKEN_IN\""
                        },
                        "value": "SimpleSwap: INVALID_TOKEN_IN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_19009e513bbcc3c948fb90f4fbc2427039c5705efb18abf72f11223861fb834c",
                          "typeString": "literal_string \"SimpleSwap: INVALID_TOKEN_IN\""
                        }
                      ],
                      "expression": {
                        "id": 34292,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3471,
                        "src": "667:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "670:12:32",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13574,
                      "src": "667:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 34296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "667:47:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34297,
                  "nodeType": "ExpressionStatement",
                  "src": "667:47:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34301,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34265,
                        "src": "740:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34302,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34272,
                        "src": "749:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34303,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34279,
                        "src": "759:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34298,
                        "name": "simpleSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34796,
                        "src": "724:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleSwap_$697",
                          "typeString": "contract SimpleSwap"
                        }
                      },
                      "id": 34300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "735:4:32",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 211,
                      "src": "724:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 34304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "724:44:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34305,
                  "nodeType": "ExpressionStatement",
                  "src": "724:44:32"
                }
              ]
            },
            "functionSelector": "bce5ff79",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_revert_when_tokenIn_is_not_tokenA_or_tokenB",
            "nameLocation": "437:48:32",
            "parameters": {
              "id": 34262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "485:2:32"
            },
            "returnParameters": {
              "id": 34263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "495:0:32"
            },
            "scope": 34754,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34353,
            "nodeType": "FunctionDefinition",
            "src": "781:349:32",
            "nodes": [],
            "body": {
              "id": 34352,
              "nodeType": "Block",
              "src": "849:281:32",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34311
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34311,
                      "mutability": "mutable",
                      "name": "tokenIn",
                      "nameLocation": "867:7:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34352,
                      "src": "859:15:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 34310,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "859:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34316,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34314,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34783,
                        "src": "885:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      ],
                      "id": 34313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "877:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 34312,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "877:7:32",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 34315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "877:15:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "859:33:32"
                },
                {
                  "assignments": [
                    34318
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34318,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nameLocation": "910:8:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34352,
                      "src": "902:16:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 34317,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "902:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34323,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 34321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "929:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 34320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "921:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 34319,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "921:7:32",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 34322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "921:10:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "902:29:32"
                },
                {
                  "assignments": [
                    34325
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34325,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "949:8:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34352,
                      "src": "941:16:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34324,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "941:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34331,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 34326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "960:2:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 34329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 34327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "965:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "id": 34328,
                        "name": "tokenADecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34788,
                        "src": "971:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "965:20:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "960:25:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "941:44:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34335,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34775,
                        "src": "1005:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34332,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3471,
                        "src": "996:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "999:5:32",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13533,
                      "src": "996:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 34336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "996:15:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34337,
                  "nodeType": "ExpressionStatement",
                  "src": "996:15:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "53696d706c65537761703a20494e56414c49445f544f4b454e5f4f5554",
                        "id": 34341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1037:31:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4b9bae2dac3119006a52b24406b50da0ae02802018597d1de9fafe907b6009db",
                          "typeString": "literal_string \"SimpleSwap: INVALID_TOKEN_OUT\""
                        },
                        "value": "SimpleSwap: INVALID_TOKEN_OUT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4b9bae2dac3119006a52b24406b50da0ae02802018597d1de9fafe907b6009db",
                          "typeString": "literal_string \"SimpleSwap: INVALID_TOKEN_OUT\""
                        }
                      ],
                      "expression": {
                        "id": 34338,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3471,
                        "src": "1021:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1024:12:32",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13574,
                      "src": "1021:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 34342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1021:48:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34343,
                  "nodeType": "ExpressionStatement",
                  "src": "1021:48:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34347,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34311,
                        "src": "1095:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34348,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34318,
                        "src": "1104:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34349,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34325,
                        "src": "1114:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34344,
                        "name": "simpleSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34796,
                        "src": "1079:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleSwap_$697",
                          "typeString": "contract SimpleSwap"
                        }
                      },
                      "id": 34346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1090:4:32",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 211,
                      "src": "1079:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 34350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1079:44:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34351,
                  "nodeType": "ExpressionStatement",
                  "src": "1079:44:32"
                }
              ]
            },
            "functionSelector": "392bd3cf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_revert_when_tokenOut_is_not_tokenA_or_tokenB",
            "nameLocation": "790:49:32",
            "parameters": {
              "id": 34308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:2:32"
            },
            "returnParameters": {
              "id": 34309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "849:0:32"
            },
            "scope": 34754,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34399,
            "nodeType": "FunctionDefinition",
            "src": "1136:353:32",
            "nodes": [],
            "body": {
              "id": 34398,
              "nodeType": "Block",
              "src": "1203:286:32",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34357
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34357,
                      "mutability": "mutable",
                      "name": "tokenIn",
                      "nameLocation": "1221:7:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34398,
                      "src": "1213:15:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 34356,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1213:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34362,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34360,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34783,
                        "src": "1239:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      ],
                      "id": 34359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1231:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 34358,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1231:7:32",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 34361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1231:15:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1213:33:32"
                },
                {
                  "assignments": [
                    34364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34364,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nameLocation": "1264:8:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34398,
                      "src": "1256:16:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 34363,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1256:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34369,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34367,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34783,
                        "src": "1283:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      ],
                      "id": 34366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1275:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 34365,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1275:7:32",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 34368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1275:15:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1256:34:32"
                },
                {
                  "assignments": [
                    34371
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34371,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "1308:8:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34398,
                      "src": "1300:16:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34370,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1300:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34377,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 34372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1319:2:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 34375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 34373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1324:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "id": 34374,
                        "name": "tokenADecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34788,
                        "src": "1330:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1324:20:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1319:25:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1300:44:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34381,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34775,
                        "src": "1364:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34378,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3471,
                        "src": "1355:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1358:5:32",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13533,
                      "src": "1355:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 34382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1355:15:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34383,
                  "nodeType": "ExpressionStatement",
                  "src": "1355:15:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "53696d706c65537761703a204944454e544943414c5f41444452455353",
                        "id": 34387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1396:31:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_154644faf0f52a5902731fa7b37e172ab52ff9eb538053b9068b36417473cb53",
                          "typeString": "literal_string \"SimpleSwap: IDENTICAL_ADDRESS\""
                        },
                        "value": "SimpleSwap: IDENTICAL_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_154644faf0f52a5902731fa7b37e172ab52ff9eb538053b9068b36417473cb53",
                          "typeString": "literal_string \"SimpleSwap: IDENTICAL_ADDRESS\""
                        }
                      ],
                      "expression": {
                        "id": 34384,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3471,
                        "src": "1380:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1383:12:32",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13574,
                      "src": "1380:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 34388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1380:48:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34389,
                  "nodeType": "ExpressionStatement",
                  "src": "1380:48:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34393,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34357,
                        "src": "1454:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34394,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34364,
                        "src": "1463:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34395,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34371,
                        "src": "1473:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34390,
                        "name": "simpleSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34796,
                        "src": "1438:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleSwap_$697",
                          "typeString": "contract SimpleSwap"
                        }
                      },
                      "id": 34392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1449:4:32",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 211,
                      "src": "1438:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 34396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1438:44:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34397,
                  "nodeType": "ExpressionStatement",
                  "src": "1438:44:32"
                }
              ]
            },
            "functionSelector": "cba202d8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_revert_when_tokenIn_is_the_same_as_tokenOut",
            "nameLocation": "1145:48:32",
            "parameters": {
              "id": 34354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1193:2:32"
            },
            "returnParameters": {
              "id": 34355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1203:0:32"
            },
            "scope": 34754,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34441,
            "nodeType": "FunctionDefinition",
            "src": "1495:322:32",
            "nodes": [],
            "body": {
              "id": 34440,
              "nodeType": "Block",
              "src": "1547:270:32",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34403
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34403,
                      "mutability": "mutable",
                      "name": "tokenIn",
                      "nameLocation": "1565:7:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34440,
                      "src": "1557:15:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 34402,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1557:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34408,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34406,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34783,
                        "src": "1583:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      ],
                      "id": 34405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1575:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 34404,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1575:7:32",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 34407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1575:15:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1557:33:32"
                },
                {
                  "assignments": [
                    34410
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34410,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nameLocation": "1608:8:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34440,
                      "src": "1600:16:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 34409,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1600:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34415,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34413,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34786,
                        "src": "1627:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      ],
                      "id": 34412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1619:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 34411,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1619:7:32",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 34414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1619:15:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1600:34:32"
                },
                {
                  "assignments": [
                    34417
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34417,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "1652:8:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34440,
                      "src": "1644:16:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34416,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1644:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34419,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 34418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1663:1:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1644:20:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34423,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34775,
                        "src": "1684:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34420,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3471,
                        "src": "1675:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1678:5:32",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13533,
                      "src": "1675:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 34424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1675:15:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34425,
                  "nodeType": "ExpressionStatement",
                  "src": "1675:15:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "53696d706c65537761703a20494e53554646494349454e545f494e5055545f414d4f554e54",
                        "id": 34429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1716:39:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6defced64eedaaeb41b2fb2edc74df0f8d3d59831c13788515434fda8bb2e7b8",
                          "typeString": "literal_string \"SimpleSwap: INSUFFICIENT_INPUT_AMOUNT\""
                        },
                        "value": "SimpleSwap: INSUFFICIENT_INPUT_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6defced64eedaaeb41b2fb2edc74df0f8d3d59831c13788515434fda8bb2e7b8",
                          "typeString": "literal_string \"SimpleSwap: INSUFFICIENT_INPUT_AMOUNT\""
                        }
                      ],
                      "expression": {
                        "id": 34426,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3471,
                        "src": "1700:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1703:12:32",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13574,
                      "src": "1700:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 34430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1700:56:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34431,
                  "nodeType": "ExpressionStatement",
                  "src": "1700:56:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34435,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34403,
                        "src": "1782:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34436,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34410,
                        "src": "1791:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34437,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34417,
                        "src": "1801:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34432,
                        "name": "simpleSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34796,
                        "src": "1766:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleSwap_$697",
                          "typeString": "contract SimpleSwap"
                        }
                      },
                      "id": 34434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1777:4:32",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 211,
                      "src": "1766:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 34438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1766:44:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34439,
                  "nodeType": "ExpressionStatement",
                  "src": "1766:44:32"
                }
              ]
            },
            "functionSelector": "32fdd946",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_revert_when_amountIn_is_zero",
            "nameLocation": "1504:33:32",
            "parameters": {
              "id": 34400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1537:2:32"
            },
            "returnParameters": {
              "id": 34401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1547:0:32"
            },
            "scope": 34754,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34597,
            "nodeType": "FunctionDefinition",
            "src": "1823:1143:32",
            "nodes": [],
            "body": {
              "id": 34596,
              "nodeType": "Block",
              "src": "1891:1075:32",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34445
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34445,
                      "mutability": "mutable",
                      "name": "tokenIn",
                      "nameLocation": "1909:7:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34596,
                      "src": "1901:15:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 34444,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1901:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34450,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34448,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34783,
                        "src": "1927:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      ],
                      "id": 34447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1919:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 34446,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1919:7:32",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 34449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1919:15:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1901:33:32"
                },
                {
                  "assignments": [
                    34452
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34452,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nameLocation": "1952:8:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34596,
                      "src": "1944:16:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 34451,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1944:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34457,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34455,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34786,
                        "src": "1971:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      ],
                      "id": 34454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1963:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 34453,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1963:7:32",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 34456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1963:15:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1944:34:32"
                },
                {
                  "assignments": [
                    34459
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34459,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "1996:8:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34596,
                      "src": "1988:16:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34458,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1988:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34465,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "313030",
                      "id": 34460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2007:3:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 34463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 34461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2013:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "id": 34462,
                        "name": "tokenADecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34788,
                        "src": "2019:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2013:20:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2007:26:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1988:45:32"
                },
                {
                  "assignments": [
                    34467
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34467,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "2051:9:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34596,
                      "src": "2043:17:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34466,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2043:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34473,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3530",
                      "id": 34468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2063:2:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 34471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 34469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2068:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "id": 34470,
                        "name": "tokenBDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34790,
                        "src": "2074:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2068:20:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2063:25:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2043:45:32"
                },
                {
                  "assignments": [
                    34475
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34475,
                      "mutability": "mutable",
                      "name": "takerBalanceABefore",
                      "nameLocation": "2107:19:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34596,
                      "src": "2099:27:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34474,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2099:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34480,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34478,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34775,
                        "src": "2146:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34476,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34783,
                        "src": "2129:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      },
                      "id": 34477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2136:9:32",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30342,
                      "src": "2129:16:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 34479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2129:23:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2099:53:32"
                },
                {
                  "assignments": [
                    34482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34482,
                      "mutability": "mutable",
                      "name": "takerBalanceBBefore",
                      "nameLocation": "2170:19:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34596,
                      "src": "2162:27:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34481,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2162:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34487,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34485,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34775,
                        "src": "2209:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34483,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34786,
                        "src": "2192:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      },
                      "id": 34484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2199:9:32",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30342,
                      "src": "2192:16:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 34486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2192:23:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2162:53:32"
                },
                {
                  "assignments": [
                    34489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34489,
                      "mutability": "mutable",
                      "name": "simpleSwapBalanceABefore",
                      "nameLocation": "2233:24:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34596,
                      "src": "2225:32:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34488,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2225:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34497,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34494,
                            "name": "simpleSwap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34796,
                            "src": "2285:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleSwap_$697",
                              "typeString": "contract SimpleSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SimpleSwap_$697",
                              "typeString": "contract SimpleSwap"
                            }
                          ],
                          "id": 34493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2277:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34492,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2277:7:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2277:19:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34490,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34783,
                        "src": "2260:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      },
                      "id": 34491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2267:9:32",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30342,
                      "src": "2260:16:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 34496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2260:37:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2225:72:32"
                },
                {
                  "assignments": [
                    34499
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34499,
                      "mutability": "mutable",
                      "name": "simpleSwapBalanceBBefore",
                      "nameLocation": "2315:24:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34596,
                      "src": "2307:32:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34498,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2307:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34507,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34504,
                            "name": "simpleSwap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34796,
                            "src": "2367:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleSwap_$697",
                              "typeString": "contract SimpleSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SimpleSwap_$697",
                              "typeString": "contract SimpleSwap"
                            }
                          ],
                          "id": 34503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2359:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34502,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2359:7:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2359:19:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34500,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34786,
                        "src": "2342:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      },
                      "id": 34501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2349:9:32",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30342,
                      "src": "2342:16:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 34506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2342:37:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2307:72:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34511,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34775,
                        "src": "2404:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34508,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3471,
                        "src": "2390:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2393:10:32",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13538,
                      "src": "2390:13:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 34512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2390:20:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34513,
                  "nodeType": "ExpressionStatement",
                  "src": "2390:20:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 34517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2434:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 34518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2440:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 34519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2446:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 34520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2452:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 34514,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3471,
                        "src": "2420:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2423:10:32",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13601,
                      "src": "2420:13:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool) external"
                      }
                    },
                    "id": 34521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2420:37:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34522,
                  "nodeType": "ExpressionStatement",
                  "src": "2420:37:32"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 34524,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34775,
                        "src": "2477:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34525,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34445,
                        "src": "2484:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34526,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34452,
                        "src": "2493:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34527,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34459,
                        "src": "2503:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34528,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34467,
                        "src": "2513:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34523,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 818,
                      "src": "2472:4:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 34529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2472:51:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34530,
                  "nodeType": "EmitStatement",
                  "src": "2467:56:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34534,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34445,
                        "src": "2549:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34535,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34452,
                        "src": "2558:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34536,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34459,
                        "src": "2568:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34531,
                        "name": "simpleSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34796,
                        "src": "2533:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleSwap_$697",
                          "typeString": "contract SimpleSwap"
                        }
                      },
                      "id": 34533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2544:4:32",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 211,
                      "src": "2533:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 34537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2533:44:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34538,
                  "nodeType": "ExpressionStatement",
                  "src": "2533:44:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34544,
                                "name": "taker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34775,
                                "src": "2621:5:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 34543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2613:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34542,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2613:7:32",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2613:14:32",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34540,
                            "name": "tokenA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34783,
                            "src": "2596:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$1126",
                              "typeString": "contract TestERC20"
                            }
                          },
                          "id": 34541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2603:9:32",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30342,
                          "src": "2596:16:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2596:32:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 34549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 34547,
                          "name": "takerBalanceABefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34475,
                          "src": "2630:19:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 34548,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34459,
                          "src": "2652:8:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2630:30:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34539,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3609,
                        3634,
                        3647,
                        3663,
                        3705,
                        3747,
                        3789,
                        3826,
                        3863,
                        3900,
                        1447,
                        1472,
                        1502,
                        1527,
                        1586,
                        1611,
                        1641,
                        1666,
                        3139,
                        3174
                      ],
                      "referencedDeclaration": 1641,
                      "src": "2587:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2587:74:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34551,
                  "nodeType": "ExpressionStatement",
                  "src": "2587:74:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34557,
                                "name": "taker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34775,
                                "src": "2705:5:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 34556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2697:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34555,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2697:7:32",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2697:14:32",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34553,
                            "name": "tokenB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34786,
                            "src": "2680:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$1126",
                              "typeString": "contract TestERC20"
                            }
                          },
                          "id": 34554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2687:9:32",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30342,
                          "src": "2680:16:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2680:32:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 34562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 34560,
                          "name": "takerBalanceBBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34482,
                          "src": "2714:19:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 34561,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34467,
                          "src": "2736:9:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2714:31:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34552,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3609,
                        3634,
                        3647,
                        3663,
                        3705,
                        3747,
                        3789,
                        3826,
                        3863,
                        3900,
                        1447,
                        1472,
                        1502,
                        1527,
                        1586,
                        1611,
                        1641,
                        1666,
                        3139,
                        3174
                      ],
                      "referencedDeclaration": 1641,
                      "src": "2671:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2671:75:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34564,
                  "nodeType": "ExpressionStatement",
                  "src": "2671:75:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34570,
                                "name": "simpleSwap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34796,
                                "src": "2790:10:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SimpleSwap_$697",
                                  "typeString": "contract SimpleSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SimpleSwap_$697",
                                  "typeString": "contract SimpleSwap"
                                }
                              ],
                              "id": 34569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2782:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34568,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2782:7:32",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2782:19:32",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34566,
                            "name": "tokenA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34783,
                            "src": "2765:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$1126",
                              "typeString": "contract TestERC20"
                            }
                          },
                          "id": 34567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2772:9:32",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30342,
                          "src": "2765:16:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2765:37:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 34575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 34573,
                          "name": "simpleSwapBalanceABefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34489,
                          "src": "2804:24:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 34574,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34459,
                          "src": "2831:8:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2804:35:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34565,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3609,
                        3634,
                        3647,
                        3663,
                        3705,
                        3747,
                        3789,
                        3826,
                        3863,
                        3900,
                        1447,
                        1472,
                        1502,
                        1527,
                        1586,
                        1611,
                        1641,
                        1666,
                        3139,
                        3174
                      ],
                      "referencedDeclaration": 1641,
                      "src": "2756:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2756:84:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34577,
                  "nodeType": "ExpressionStatement",
                  "src": "2756:84:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34583,
                                "name": "simpleSwap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34796,
                                "src": "2884:10:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SimpleSwap_$697",
                                  "typeString": "contract SimpleSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SimpleSwap_$697",
                                  "typeString": "contract SimpleSwap"
                                }
                              ],
                              "id": 34582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2876:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34581,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2876:7:32",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2876:19:32",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34579,
                            "name": "tokenB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34786,
                            "src": "2859:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$1126",
                              "typeString": "contract TestERC20"
                            }
                          },
                          "id": 34580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2866:9:32",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30342,
                          "src": "2859:16:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2859:37:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 34588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 34586,
                          "name": "simpleSwapBalanceBBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34499,
                          "src": "2898:24:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 34587,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34467,
                          "src": "2925:9:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2898:36:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34578,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3609,
                        3634,
                        3647,
                        3663,
                        3705,
                        3747,
                        3789,
                        3826,
                        3863,
                        3900,
                        1447,
                        1472,
                        1502,
                        1527,
                        1586,
                        1611,
                        1641,
                        1666,
                        3139,
                        3174
                      ],
                      "referencedDeclaration": 1641,
                      "src": "2850:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2850:85:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34590,
                  "nodeType": "ExpressionStatement",
                  "src": "2850:85:32"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34591,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3471,
                        "src": "2945:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2948:9:32",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13555,
                      "src": "2945:12:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 34594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2945:14:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34595,
                  "nodeType": "ExpressionStatement",
                  "src": "2945:14:32"
                }
              ]
            },
            "functionSelector": "bb2dfdaf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_should_be_able_to_swap_from_tokenA_to_tokenB",
            "nameLocation": "1832:49:32",
            "parameters": {
              "id": 34442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1881:2:32"
            },
            "returnParameters": {
              "id": 34443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1891:0:32"
            },
            "scope": 34754,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34753,
            "nodeType": "FunctionDefinition",
            "src": "2972:1143:32",
            "nodes": [],
            "body": {
              "id": 34752,
              "nodeType": "Block",
              "src": "3040:1075:32",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34601,
                      "mutability": "mutable",
                      "name": "tokenIn",
                      "nameLocation": "3058:7:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34752,
                      "src": "3050:15:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 34600,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3050:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34606,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34604,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34786,
                        "src": "3076:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      ],
                      "id": 34603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3068:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 34602,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3068:7:32",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 34605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3068:15:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3050:33:32"
                },
                {
                  "assignments": [
                    34608
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34608,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nameLocation": "3101:8:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34752,
                      "src": "3093:16:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 34607,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3093:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34613,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34611,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34783,
                        "src": "3120:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      ],
                      "id": 34610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3112:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 34609,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3112:7:32",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 34612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3112:15:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3093:34:32"
                },
                {
                  "assignments": [
                    34615
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34615,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "3145:8:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34752,
                      "src": "3137:16:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34614,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3137:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34621,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "313030",
                      "id": 34616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3156:3:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 34619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 34617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3162:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "id": 34618,
                        "name": "tokenBDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34790,
                        "src": "3168:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3162:20:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3156:26:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3137:45:32"
                },
                {
                  "assignments": [
                    34623
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34623,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "3200:9:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34752,
                      "src": "3192:17:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34622,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3192:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34629,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3530",
                      "id": 34624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3212:2:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 34627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 34625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3217:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "id": 34626,
                        "name": "tokenADecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34788,
                        "src": "3223:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3217:20:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3212:25:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3192:45:32"
                },
                {
                  "assignments": [
                    34631
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34631,
                      "mutability": "mutable",
                      "name": "takerBalanceABefore",
                      "nameLocation": "3256:19:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34752,
                      "src": "3248:27:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34630,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3248:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34636,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34634,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34775,
                        "src": "3295:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34632,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34783,
                        "src": "3278:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      },
                      "id": 34633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3285:9:32",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30342,
                      "src": "3278:16:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 34635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3278:23:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3248:53:32"
                },
                {
                  "assignments": [
                    34638
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34638,
                      "mutability": "mutable",
                      "name": "takerBalanceBBefore",
                      "nameLocation": "3319:19:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34752,
                      "src": "3311:27:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34637,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3311:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34643,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34641,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34775,
                        "src": "3358:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34639,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34786,
                        "src": "3341:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      },
                      "id": 34640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3348:9:32",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30342,
                      "src": "3341:16:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 34642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3341:23:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3311:53:32"
                },
                {
                  "assignments": [
                    34645
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34645,
                      "mutability": "mutable",
                      "name": "simpleSwapBalanceABefore",
                      "nameLocation": "3382:24:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34752,
                      "src": "3374:32:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34644,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3374:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34653,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34650,
                            "name": "simpleSwap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34796,
                            "src": "3434:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleSwap_$697",
                              "typeString": "contract SimpleSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SimpleSwap_$697",
                              "typeString": "contract SimpleSwap"
                            }
                          ],
                          "id": 34649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3426:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34648,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3426:7:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3426:19:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34646,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34783,
                        "src": "3409:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      },
                      "id": 34647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3416:9:32",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30342,
                      "src": "3409:16:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 34652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3409:37:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3374:72:32"
                },
                {
                  "assignments": [
                    34655
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34655,
                      "mutability": "mutable",
                      "name": "simpleSwapBalanceBBefore",
                      "nameLocation": "3464:24:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 34752,
                      "src": "3456:32:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34654,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3456:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34663,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34660,
                            "name": "simpleSwap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34796,
                            "src": "3516:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleSwap_$697",
                              "typeString": "contract SimpleSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SimpleSwap_$697",
                              "typeString": "contract SimpleSwap"
                            }
                          ],
                          "id": 34659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3508:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34658,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3508:7:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3508:19:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34656,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34786,
                        "src": "3491:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$1126",
                          "typeString": "contract TestERC20"
                        }
                      },
                      "id": 34657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3498:9:32",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30342,
                      "src": "3491:16:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 34662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3491:37:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3456:72:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34667,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34775,
                        "src": "3553:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34664,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3471,
                        "src": "3539:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3542:10:32",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13538,
                      "src": "3539:13:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 34668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3539:20:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34669,
                  "nodeType": "ExpressionStatement",
                  "src": "3539:20:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 34673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3583:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 34674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3589:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 34675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3595:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 34676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3601:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 34670,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3471,
                        "src": "3569:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3572:10:32",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13601,
                      "src": "3569:13:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool) external"
                      }
                    },
                    "id": 34677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3569:37:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34678,
                  "nodeType": "ExpressionStatement",
                  "src": "3569:37:32"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 34680,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34775,
                        "src": "3626:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34681,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34601,
                        "src": "3633:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34682,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34608,
                        "src": "3642:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34683,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34615,
                        "src": "3652:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34684,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34623,
                        "src": "3662:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34679,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 818,
                      "src": "3621:4:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 34685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3621:51:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34686,
                  "nodeType": "EmitStatement",
                  "src": "3616:56:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34690,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34601,
                        "src": "3698:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34691,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34608,
                        "src": "3707:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34692,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34615,
                        "src": "3717:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34687,
                        "name": "simpleSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34796,
                        "src": "3682:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleSwap_$697",
                          "typeString": "contract SimpleSwap"
                        }
                      },
                      "id": 34689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3693:4:32",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 211,
                      "src": "3682:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 34693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3682:44:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34694,
                  "nodeType": "ExpressionStatement",
                  "src": "3682:44:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34700,
                                "name": "taker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34775,
                                "src": "3770:5:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 34699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3762:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34698,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3762:7:32",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34701,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3762:14:32",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34696,
                            "name": "tokenA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34783,
                            "src": "3745:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$1126",
                              "typeString": "contract TestERC20"
                            }
                          },
                          "id": 34697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3752:9:32",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30342,
                          "src": "3745:16:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3745:32:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 34705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 34703,
                          "name": "takerBalanceABefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34631,
                          "src": "3779:19:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 34704,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34623,
                          "src": "3801:9:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3779:31:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34695,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3609,
                        3634,
                        3647,
                        3663,
                        3705,
                        3747,
                        3789,
                        3826,
                        3863,
                        3900,
                        1447,
                        1472,
                        1502,
                        1527,
                        1586,
                        1611,
                        1641,
                        1666,
                        3139,
                        3174
                      ],
                      "referencedDeclaration": 1641,
                      "src": "3736:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3736:75:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34707,
                  "nodeType": "ExpressionStatement",
                  "src": "3736:75:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34713,
                                "name": "taker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34775,
                                "src": "3855:5:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 34712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3847:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34711,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3847:7:32",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3847:14:32",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34709,
                            "name": "tokenB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34786,
                            "src": "3830:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$1126",
                              "typeString": "contract TestERC20"
                            }
                          },
                          "id": 34710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3837:9:32",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30342,
                          "src": "3830:16:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3830:32:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 34718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 34716,
                          "name": "takerBalanceBBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34638,
                          "src": "3864:19:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 34717,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34615,
                          "src": "3886:8:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3864:30:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34708,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3609,
                        3634,
                        3647,
                        3663,
                        3705,
                        3747,
                        3789,
                        3826,
                        3863,
                        3900,
                        1447,
                        1472,
                        1502,
                        1527,
                        1586,
                        1611,
                        1641,
                        1666,
                        3139,
                        3174
                      ],
                      "referencedDeclaration": 1641,
                      "src": "3821:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3821:74:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34720,
                  "nodeType": "ExpressionStatement",
                  "src": "3821:74:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34726,
                                "name": "simpleSwap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34796,
                                "src": "3939:10:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SimpleSwap_$697",
                                  "typeString": "contract SimpleSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SimpleSwap_$697",
                                  "typeString": "contract SimpleSwap"
                                }
                              ],
                              "id": 34725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3931:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34724,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3931:7:32",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3931:19:32",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34722,
                            "name": "tokenA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34783,
                            "src": "3914:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$1126",
                              "typeString": "contract TestERC20"
                            }
                          },
                          "id": 34723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3921:9:32",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30342,
                          "src": "3914:16:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3914:37:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 34731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 34729,
                          "name": "simpleSwapBalanceABefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34645,
                          "src": "3953:24:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 34730,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34623,
                          "src": "3980:9:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3953:36:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34721,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3609,
                        3634,
                        3647,
                        3663,
                        3705,
                        3747,
                        3789,
                        3826,
                        3863,
                        3900,
                        1447,
                        1472,
                        1502,
                        1527,
                        1586,
                        1611,
                        1641,
                        1666,
                        3139,
                        3174
                      ],
                      "referencedDeclaration": 1641,
                      "src": "3905:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3905:85:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34733,
                  "nodeType": "ExpressionStatement",
                  "src": "3905:85:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34739,
                                "name": "simpleSwap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34796,
                                "src": "4034:10:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SimpleSwap_$697",
                                  "typeString": "contract SimpleSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SimpleSwap_$697",
                                  "typeString": "contract SimpleSwap"
                                }
                              ],
                              "id": 34738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4026:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34737,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4026:7:32",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4026:19:32",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34735,
                            "name": "tokenB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34786,
                            "src": "4009:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$1126",
                              "typeString": "contract TestERC20"
                            }
                          },
                          "id": 34736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4016:9:32",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30342,
                          "src": "4009:16:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4009:37:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 34744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 34742,
                          "name": "simpleSwapBalanceBBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34655,
                          "src": "4048:24:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 34743,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34615,
                          "src": "4075:8:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4048:35:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34734,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3609,
                        3634,
                        3647,
                        3663,
                        3705,
                        3747,
                        3789,
                        3826,
                        3863,
                        3900,
                        1447,
                        1472,
                        1502,
                        1527,
                        1586,
                        1611,
                        1641,
                        1666,
                        3139,
                        3174
                      ],
                      "referencedDeclaration": 1641,
                      "src": "4000:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4000:84:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34746,
                  "nodeType": "ExpressionStatement",
                  "src": "4000:84:32"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34747,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3471,
                        "src": "4094:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4097:9:32",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13555,
                      "src": "4094:12:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 34750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4094:14:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34751,
                  "nodeType": "ExpressionStatement",
                  "src": "4094:14:32"
                }
              ]
            },
            "functionSelector": "136444b1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_should_be_able_to_swap_from_tokenB_to_tokenA",
            "nameLocation": "2981:49:32",
            "parameters": {
              "id": 34598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3030:2:32"
            },
            "returnParameters": {
              "id": 34599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3040:0:32"
            },
            "scope": 34754,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34221,
              "name": "SimpleSwapSetUp",
              "nameLocations": [
                "153:15:32"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34988,
              "src": "153:15:32"
            },
            "id": 34222,
            "nodeType": "InheritanceSpecifier",
            "src": "153:15:32"
          }
        ],
        "canonicalName": "SimpleSwapSwapTest",
        "contractDependencies": [
          697,
          1126
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34754,
          34988,
          819,
          12438,
          3478,
          3475,
          12389,
          8168,
          7878,
          7199,
          5602,
          4908,
          3418
        ],
        "name": "SimpleSwapSwapTest",
        "nameLocation": "131:18:32",
        "scope": 34755,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 32
}