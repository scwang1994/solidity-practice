{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_constructor_reserve_should_be_zero_after_initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_constructor_tokenA_should_be_less_than_tokenB",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_revert_constructor_tokenA_is_not_a_contract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_revert_constructor_tokenA_tokenB_identical",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_revert_constructor_tokenB_is_not_a_contract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "288:1537:30:-:0;;;1572:26:7;;;-1:-1:-1;;1572:26:7;;;1594:4;1572:26;;;;;;3161:44:10;;;;;;;;;;;389:29:30;;;-1:-1:-1;;;;;;389:29:30;411:6;389:29;;;288:1537;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "288:1537:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;446:131;;;:::i;:::-;;779:190;;;:::i;2161:134:13:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2930:133;;;:::i;2631:141::-;;;:::i;1191:313:30:-;;;:::i;975:210::-;;;:::i;2447:178:13:-;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;1510:313:30:-;;;:::i;583:190::-;;;:::i;1866:141:13:-;;;:::i;1819:584:7:-;;;:::i;:::-;;;3688:14:34;;3681:22;3663:41;;3651:2;3636:18;1819:584:7;3523:187:34;2013:142:13;;;:::i;1572:26:7:-;;;;;;;;;446:131:30;489:31;;;;;:::i;:::-;4018:2:34;4000:21;;;4057:1;4037:18;;;4030:29;-1:-1:-1;;;4090:2:34;4075:18;;4068:37;4143:3;4136:4;4121:20;;4114:33;;;4184:1;4163:19;;;4156:30;-1:-1:-1;;;4217:3:34;4202:19;;4195:34;4261:3;4246:19;489:31:30;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;480:6:30;:40;;-1:-1:-1;;;;;;480:40:30;-1:-1:-1;;;;;480:40:30;;;;;;;;;;539:31;;;;;:::i;:::-;4579:2:34;4561:21;;;4618:1;4598:18;;;4591:29;-1:-1:-1;;;4651:2:34;4636:18;;4629:37;4704:3;4697:4;4682:20;;4675:33;;;4745:1;4724:19;;;4717:30;-1:-1:-1;;;4778:3:34;4763:19;;4756:34;4822:3;4807:19;539:31:30;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;530:6:30;:40;;-1:-1:-1;;;;;;530:40:30;-1:-1:-1;;;;;530:40:30;;;;;;;;;;446:131::o;779:190::-;856:53;;-1:-1:-1;;;856:53:30;;5038:2:34;856:53:30;;;5020:21:34;5077:2;5057:18;;;5050:30;5116:34;5096:18;;;5089:62;-1:-1:-1;;;5167:18:34;;;5160:32;856:15:30;;;;5209:19:34;;856:53:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;949:6:30;;958:3;;926:36;;-1:-1:-1;;;;;949:6:30;;;;-1:-1:-1;958:3:30;;;-1:-1:-1;926:36:30;;;:::i;:::-;-1:-1:-1;;;;;5469:15:34;;;5451:34;;5521:15;;5516:2;5501:18;;5494:43;5401:2;5386:18;926:36:30;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;919:4:30;:43;;-1:-1:-1;;;;;;919:43:30;-1:-1:-1;;;;;919:43:30;;;;;;;;;;779:190::o;2161:134:13:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:13;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:13;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:13;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;1191:313:30:-;1306:6;;1323;;1283:48;;-1:-1:-1;;;;;1306:6:30;;;;1323;;;;1283:48;;;:::i;:::-;-1:-1:-1;;;;;5469:15:34;;;5451:34;;5521:15;;5516:2;5501:18;;5494:43;5401:2;5386:18;1283:48:30;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1276:4:30;:55;;-1:-1:-1;;;;;;1276:55:30;-1:-1:-1;;;;;1276:55:30;;;;;;;;;1417:18;;;-1:-1:-1;;;1417:18:30;;;;-1:-1:-1;;;;1276:55:30;;1417:16;;:18;;;;;;;;;;;1276:55;1417:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1394:41;;-1:-1:-1;1394:41:30;-1:-1:-1;1445:21:30;1394:41;1464:1;1445:8;:21::i;:::-;1476;1485:8;1495:1;1476:8;:21::i;:::-;1266:238;;1191:313::o;975:210::-;1051:62;;-1:-1:-1;;;1051:62:30;;5999:2:34;1051:62:30;;;5981:21:34;6038:2;6018:18;;;6011:30;6077:34;6057:18;;;6050:62;-1:-1:-1;;;6128:18:34;;;6121:41;1051:15:30;;;;6179:19:34;;1051:62:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1153:6:30;;1130:48;;-1:-1:-1;;;;;1153:6:30;;;;-1:-1:-1;1153:6:30;;-1:-1:-1;1130:48:30;;;:::i;2447:178:13:-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1510:313:30;1619:6;;1636;;1596:48;;-1:-1:-1;;;;;1619:6:30;;;;1636;;;;1596:48;;;:::i;:::-;-1:-1:-1;;;;;5469:15:34;;;5451:34;;5521:15;;5516:2;5501:18;;5494:43;5401:2;5386:18;1596:48:30;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1589:4:30;:55;;-1:-1:-1;;;;;;1589:55:30;-1:-1:-1;;;;;1589:55:30;;;;;;;;;1675:16;;;-1:-1:-1;;;1675:16:30;;;;-1:-1:-1;;1589:55:30;1675:14;;:16;;;;;;;;;;;;;;1589:55;1675:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1654:37;;1701:18;1722:4;;;;;;;;;-1:-1:-1;;;;;1722:4:30;-1:-1:-1;;;;;1722:14:30;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:37;;1748:68;1773:10;-1:-1:-1;;;;;1757:28:30;1803:10;-1:-1:-1;;;;;1787:28:30;1748:8;:68::i;583:190::-;660:53;;-1:-1:-1;;;660:53:30;;7090:2:34;660:53:30;;;7072:21:34;7129:2;7109:18;;;7102:30;7168:34;7148:18;;;7141:62;-1:-1:-1;;;7219:18:34;;;7212:32;660:15:30;;;;7261:19:34;;660:53:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;745:3:30;;758:6;;730:36;;-1:-1:-1;;;;;745:3:30;;;;-1:-1:-1;758:6:30;;;-1:-1:-1;730:36:30;;;:::i;1866:141:13:-;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:7;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:7;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;7465:51:34;;;-1:-1:-1;;;7532:18:34;;;7525:34;2196:43:7;;;;;;;;;7438:18:34;;;2196:43:7;;;-1:-1:-1;;1671:64:7;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:7;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:7:o;2013:142:13:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:13;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;5209:262:7:-;5271:1;5266;:6;5262:203;;5293:41;;;;;8735:2:34;8717:21;;;8774:2;8754:18;;;8747:30;8813:34;8808:2;8793:18;;8786:62;-1:-1:-1;;;8879:2:34;8864:18;;8857:32;8921:3;8906:19;;8533:398;5293:41:7;;;;;;;;5353:31;;;9148:21:34;;;9205:2;9185:18;;;9178:30;-1:-1:-1;;;9239:2:34;9224:18;;9217:40;9324:4;9309:20;;9302:36;;;5353:31:7;;-1:-1:-1;;;;;;;;;;;5353:31:7;;;;9289:3:34;5353:31:7;;;5403;;;9561:21:34;;;9618:2;9598:18;;;9591:30;;;;-1:-1:-1;;;9652:2:34;9637:18;;9630:40;9737:4;9722:20;;9715:36;;;-1:-1:-1;;;;;;;;;;;5403:31:7;9702:3:34;9687:19;5403:31:7;;;;;;;;5448:6;:4;:6::i;15921:259::-;15982:1;15978;:5;15974:200;;;16004:41;;;;;9964:2:34;9946:21;;;10003:2;9983:18;;;9976:30;10042:34;10037:2;10022:18;;10015:62;-1:-1:-1;;;10108:2:34;10093:18;;10086:32;10150:3;10135:19;;9762:398;16004:41:7;;;;;;;;16064:30;;;10377:21:34;;;10434:1;10414:18;;;10407:29;-1:-1:-1;;;10467:2:34;10452:18;;10445:39;10551:4;10536:20;;10529:36;;;16064:30:7;;-1:-1:-1;;;;;;;;;;;16064:30:7;;;;10516:3:34;16064:30:7;;;16113;;;10788:21:34;;;10845:1;10825:18;;;10818:29;;;;-1:-1:-1;;;10878:2:34;10863:18;;10856:39;10962:4;10947:20;;10940:36;;;-1:-1:-1;;;;;;;;;;;16113:30:7;10927:3:34;10912:19;16113:30:7;10576:406:34;2409:432:7;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;11189:51:34;;;-1:-1:-1;;;11256:18:34;;;11249:34;;;;2712:4:7;11299:18:34;;;11292:34;2489:11:7;;1671:64;2586:43;;11162:18:34;;2652:67:7;;;-1:-1:-1;;2652:67:7;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:7;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:7;2820:7;:14;;-1:-1:-1;;2820:14:7;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:658:34:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:34;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:34;;14:658;-1:-1:-1;;;;;;14:658:34:o;677:1567::-;879:4;908:2;948;937:9;933:18;978:2;967:9;960:21;1001:6;1036;1030:13;1067:6;1059;1052:22;1093:2;1083:12;;1126:2;1115:9;1111:18;1104:25;;1188:2;1178:6;1175:1;1171:14;1160:9;1156:30;1152:39;1226:2;1218:6;1214:15;1247:1;1268;1278:937;1294:6;1289:3;1286:15;1278:937;;;1363:22;;;-1:-1:-1;;1359:36:34;1347:49;;1419:13;;1506:9;;-1:-1:-1;;;;;1502:35:34;1487:51;;1577:11;;1571:18;1609:15;;;1602:27;;;1690:19;;1459:15;;;1722:24;;;1812:21;;;;1857:1;;1780:2;1768:15;;;1871:236;1887:8;1882:3;1879:17;1871:236;;;1968:15;;-1:-1:-1;;;;;;1964:42:34;1950:57;;2076:17;;;;1915:1;1906:11;;;;;2033:14;;;;1871:236;;;-1:-1:-1;2193:12:34;;;;2130:5;-1:-1:-1;;;2158:15:34;;;;1320:1;1311:11;1278:937;;;-1:-1:-1;2232:6:34;;677:1567;-1:-1:-1;;;;;;;;;677:1567:34:o;2249:250::-;2334:1;2344:113;2358:6;2355:1;2352:13;2344:113;;;2434:11;;;2428:18;2415:11;;;2408:39;2380:2;2373:10;2344:113;;;-1:-1:-1;;2491:1:34;2473:16;;2466:27;2249:250::o;2504:1014::-;2666:4;2695:2;2735;2724:9;2720:18;2765:2;2754:9;2747:21;2788:6;2823;2817:13;2854:6;2846;2839:22;2892:2;2881:9;2877:18;2870:25;;2954:2;2944:6;2941:1;2937:14;2926:9;2922:30;2918:39;2904:53;;2992:2;2984:6;2980:15;3013:1;3023:466;3037:6;3034:1;3031:13;3023:466;;;3102:22;;;-1:-1:-1;;3098:36:34;3086:49;;3158:13;;3200:9;;3222:24;;;3259:74;3200:9;3307:15;;;3294:11;;;3259:74;:::i;:::-;3399:2;3376:17;-1:-1:-1;;3372:31:34;3360:44;;;;3356:53;;;-1:-1:-1;3467:12:34;;;;3432:15;;;;3059:1;3052:9;3023:466;;;-1:-1:-1;3506:6:34;;2504:1014;-1:-1:-1;;;;;;;2504:1014:34:o;5548:245::-;5627:6;5635;5688:2;5676:9;5667:7;5663:23;5659:32;5656:52;;;5704:1;5701;5694:12;5656:52;-1:-1:-1;;5727:16:34;;5783:2;5768:18;;;5762:25;5727:16;;5762:25;;-1:-1:-1;5548:245:34:o;6209:380::-;6288:1;6284:12;;;;6331;;;6352:61;;6406:4;6398:6;6394:17;6384:27;;6352:61;6459:2;6451:6;6448:14;6428:18;6425:38;6422:161;;6505:10;6500:3;6496:20;6493:1;6486:31;6540:4;6537:1;6530:15;6568:4;6565:1;6558:15;6422:161;;6209:380;;;:::o;6594:290::-;6664:6;6717:2;6705:9;6696:7;6692:23;6688:32;6685:52;;;6733:1;6730;6723:12;6685:52;6759:16;;-1:-1:-1;;;;;6804:31:34;;6794:42;;6784:70;;6850:1;6847;6840:12;6784:70;6873:5;6594:290;-1:-1:-1;;;6594:290:34:o;7570:384::-;-1:-1:-1;;;;;;7755:33:34;;7743:46;;7812:13;;7725:3;;7834:74;7812:13;7897:1;7888:11;;7881:4;7869:17;;7834:74;:::i;:::-;7928:16;;;;7946:1;7924:24;;7570:384;-1:-1:-1;;;7570:384:34:o;7959:287::-;8088:3;8126:6;8120:13;8142:66;8201:6;8196:3;8189:4;8181:6;8177:17;8142:66;:::i;:::-;8224:16;;;;;7959:287;-1:-1:-1;;7959:287:34:o;8251:277::-;8318:6;8371:2;8359:9;8350:7;8346:23;8342:32;8339:52;;;8387:1;8384;8377:12;8339:52;8419:9;8413:16;8472:5;8465:13;8458:21;8451:5;8448:32;8438:60;;8494:1;8491;8484:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_constructor_reserve_should_be_zero_after_initialize()": "57eabadf",
    "test_constructor_tokenA_should_be_less_than_tokenB()": "96111de8",
    "test_revert_constructor_tokenA_is_not_a_contract()": "a94dc3f7",
    "test_revert_constructor_tokenA_tokenB_identical()": "6287005b",
    "test_revert_constructor_tokenB_is_not_a_contract()": "13320d3c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_constructor_reserve_should_be_zero_after_initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_constructor_tokenA_should_be_less_than_tokenB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_revert_constructor_tokenA_is_not_a_contract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_revert_constructor_tokenA_tokenB_identical\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_revert_constructor_tokenB_is_not_a_contract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/SimpleSwap.constructor.t.sol\":\"SimpleSwapConstructorTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/SimpleSwap.sol\":{\"keccak256\":\"0x259ee1a77391c8e4442844c2fe375f0c97f8851a270aacedf03bb04dd6b4c1d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bc2725f8290e958648a69b86228653a4bec2eed2358dd3033e1f2a21fc46d4c\",\"dweb:/ipfs/QmX4zk52ieRbDbdaFfhxMWm1C6xUYVxXnuVwjEu1Efg6Kf\"]},\"contracts/interface/IERC20.sol\":{\"keccak256\":\"0x61db17aebc5d812c7002d15c1da954065e56abe49d64b14c034abe5604d70eb3\",\"urls\":[\"bzz-raw://b006685e753f9120469f10b09c159f222d4cb8b507a6c1f0c14ed50c883ebe66\",\"dweb:/ipfs/QmSyY7iTugbczPwfGK67etiyPULenYGzzRYbt8aabwwkUb\"]},\"contracts/interface/ISimpleSwap.sol\":{\"keccak256\":\"0x699bba18b8ff068ec52c1be290341820357c8de90d63812a21bc6cfae5760a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://168272fd8ed425ade969005b973c8a5262da077eaee50c0d4daa012ab3bccc1c\",\"dweb:/ipfs/Qmb7J7WfRpySBV8dkr4anfyKGYWRYpt5YwnBmu5qDuECM6\"]},\"contracts/libraries/Math.sol\":{\"keccak256\":\"0x4dd382bdd3357157ef9f06235a4f7f682dd8fe4ee9723d6e351b58adf309a990\",\"urls\":[\"bzz-raw://9ee92b594c3e89ad22c0938fb0a97696e8436c87c4c45b2d3c4e880ea2bae27c\",\"dweb:/ipfs/QmUybN45sS1EXoKwxM6t6bLi1jsawuSSV7sTNA616VSCye\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xf4f716ac3805f004e4a58113fb0b3b314036bd3f377a3a05079876a80e41d31e\",\"urls\":[\"bzz-raw://d0b6f68d31110318ad9044c8d2c892561be5ce9ab1ee13975b67460d67f7db01\",\"dweb:/ipfs/QmcgcJ5f1NfZdTmPZHsxzxvvhoW5UojwNoMnvpPYbKtLsM\"]},\"contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0x2312c12f83d48bcee24109bee78be9973b57698ef6de7d33fe5f2fdc64f302de\",\"urls\":[\"bzz-raw://303276fcd26e4985cb8c3c25e8459d86a8c39557aac140d4e48457f4f9d215b8\",\"dweb:/ipfs/Qmcqt3Z2i2r3Zfq1u5sXZFciCxgySJp3AzjCLNEahKzUZd\"]},\"contracts/test/TestERC20.sol\":{\"keccak256\":\"0xea0e05feb1ae06e2d4eb065fcc6f381eb8c545ebf4239501870dc4dd3dc79c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://369971b16a303eb0afeba1ec19aa4d23355ca85fa95513f3d1bcc6804022767b\",\"dweb:/ipfs/QmSXGWgEnr8YuQVeVWUxPSv6MtsjMJwFyzTcUjmGakWLpz\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0e6f32877ab26a83c9334eb5a000bf326bd2a0b04fea8647e045cea9c445f534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8965978bfa66ddab8db95449a96ee47d44c62ebcb4271ab293e847f359a2ba7d\",\"dweb:/ipfs/QmazxpekoHnno4ySoNUct7NcKx6UJR7UvcMtJ9JYsBDEUh\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xce33e7c67d273bd32e324c347a5fc7b8815fb7d4880a1bc6569409b2e91f0017\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91a2c8facd01ee5242135a4f1b368f99fc087574c2b8ebb3e2bdec9af8be0e07\",\"dweb:/ipfs/QmStG1wYSPXMEirv9nsA9p4EjzGRtoH999czMxGMj8KHhM\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x06f0761a502a8dc74c06029c603831780ff32f1e85dad2ae0f810b7545fba09b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70e940ed53ef0270d1d6f3215fcccf92dd675f8ec4a59e1fbd0535e0d52fb46c\",\"dweb:/ipfs/QmPTkXXzGKFyWBmbQPrL6Yg4ECWmu3LndSH9ex2E3czZuF\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"test/foundry/SimpleSwap.constructor.t.sol\":{\"keccak256\":\"0xfda72c97e39fc5944f1dab2129818ace914817302f8aafcf7f5913959d1ac18a\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://c33900bae5c7ee7ac5867786a4e9db7443d1f5338b446a104123591b6c0adc82\",\"dweb:/ipfs/QmbLqYCzukACX85RmmToaU198LVnvyUw2gZBjMjAc7FgP9\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_constructor_reserve_should_be_zero_after_initialize"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_constructor_tokenA_should_be_less_than_tokenB"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_revert_constructor_tokenA_is_not_a_contract"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_revert_constructor_tokenA_tokenB_identical"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_revert_constructor_tokenB_is_not_a_contract"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/SimpleSwap.constructor.t.sol": "SimpleSwapConstructorTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/SimpleSwap.sol": {
        "keccak256": "0x259ee1a77391c8e4442844c2fe375f0c97f8851a270aacedf03bb04dd6b4c1d6",
        "urls": [
          "bzz-raw://7bc2725f8290e958648a69b86228653a4bec2eed2358dd3033e1f2a21fc46d4c",
          "dweb:/ipfs/QmX4zk52ieRbDbdaFfhxMWm1C6xUYVxXnuVwjEu1Efg6Kf"
        ],
        "license": "MIT"
      },
      "contracts/interface/IERC20.sol": {
        "keccak256": "0x61db17aebc5d812c7002d15c1da954065e56abe49d64b14c034abe5604d70eb3",
        "urls": [
          "bzz-raw://b006685e753f9120469f10b09c159f222d4cb8b507a6c1f0c14ed50c883ebe66",
          "dweb:/ipfs/QmSyY7iTugbczPwfGK67etiyPULenYGzzRYbt8aabwwkUb"
        ],
        "license": null
      },
      "contracts/interface/ISimpleSwap.sol": {
        "keccak256": "0x699bba18b8ff068ec52c1be290341820357c8de90d63812a21bc6cfae5760a3e",
        "urls": [
          "bzz-raw://168272fd8ed425ade969005b973c8a5262da077eaee50c0d4daa012ab3bccc1c",
          "dweb:/ipfs/Qmb7J7WfRpySBV8dkr4anfyKGYWRYpt5YwnBmu5qDuECM6"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Math.sol": {
        "keccak256": "0x4dd382bdd3357157ef9f06235a4f7f682dd8fe4ee9723d6e351b58adf309a990",
        "urls": [
          "bzz-raw://9ee92b594c3e89ad22c0938fb0a97696e8436c87c4c45b2d3c4e880ea2bae27c",
          "dweb:/ipfs/QmUybN45sS1EXoKwxM6t6bLi1jsawuSSV7sTNA616VSCye"
        ],
        "license": null
      },
      "contracts/libraries/SafeMath.sol": {
        "keccak256": "0xf4f716ac3805f004e4a58113fb0b3b314036bd3f377a3a05079876a80e41d31e",
        "urls": [
          "bzz-raw://d0b6f68d31110318ad9044c8d2c892561be5ce9ab1ee13975b67460d67f7db01",
          "dweb:/ipfs/QmcgcJ5f1NfZdTmPZHsxzxvvhoW5UojwNoMnvpPYbKtLsM"
        ],
        "license": null
      },
      "contracts/libraries/UQ112x112.sol": {
        "keccak256": "0x2312c12f83d48bcee24109bee78be9973b57698ef6de7d33fe5f2fdc64f302de",
        "urls": [
          "bzz-raw://303276fcd26e4985cb8c3c25e8459d86a8c39557aac140d4e48457f4f9d215b8",
          "dweb:/ipfs/Qmcqt3Z2i2r3Zfq1u5sXZFciCxgySJp3AzjCLNEahKzUZd"
        ],
        "license": null
      },
      "contracts/test/TestERC20.sol": {
        "keccak256": "0xea0e05feb1ae06e2d4eb065fcc6f381eb8c545ebf4239501870dc4dd3dc79c87",
        "urls": [
          "bzz-raw://369971b16a303eb0afeba1ec19aa4d23355ca85fa95513f3d1bcc6804022767b",
          "dweb:/ipfs/QmSXGWgEnr8YuQVeVWUxPSv6MtsjMJwFyzTcUjmGakWLpz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0e6f32877ab26a83c9334eb5a000bf326bd2a0b04fea8647e045cea9c445f534",
        "urls": [
          "bzz-raw://8965978bfa66ddab8db95449a96ee47d44c62ebcb4271ab293e847f359a2ba7d",
          "dweb:/ipfs/QmazxpekoHnno4ySoNUct7NcKx6UJR7UvcMtJ9JYsBDEUh"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xce33e7c67d273bd32e324c347a5fc7b8815fb7d4880a1bc6569409b2e91f0017",
        "urls": [
          "bzz-raw://91a2c8facd01ee5242135a4f1b368f99fc087574c2b8ebb3e2bdec9af8be0e07",
          "dweb:/ipfs/QmStG1wYSPXMEirv9nsA9p4EjzGRtoH999czMxGMj8KHhM"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x06f0761a502a8dc74c06029c603831780ff32f1e85dad2ae0f810b7545fba09b",
        "urls": [
          "bzz-raw://70e940ed53ef0270d1d6f3215fcccf92dd675f8ec4a59e1fbd0535e0d52fb46c",
          "dweb:/ipfs/QmPTkXXzGKFyWBmbQPrL6Yg4ECWmu3LndSH9ex2E3czZuF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "test/foundry/SimpleSwap.constructor.t.sol": {
        "keccak256": "0xfda72c97e39fc5944f1dab2129818ace914817302f8aafcf7f5913959d1ac18a",
        "urls": [
          "bzz-raw://c33900bae5c7ee7ac5867786a4e9db7443d1f5338b446a104123591b6c0adc82",
          "dweb:/ipfs/QmbLqYCzukACX85RmmToaU198LVnvyUw2gZBjMjAc7FgP9"
        ],
        "license": "SEE LICENSE IN LICENSE"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/SimpleSwap.constructor.t.sol",
    "id": 32618,
    "exportedSymbols": {
      "DSTest": [
        3418
      ],
      "SimpleSwap": [
        697
      ],
      "SimpleSwapConstructorTest": [
        32617
      ],
      "Test": [
        12438
      ],
      "TestERC20": [
        1126
      ]
    },
    "nodeType": "SourceUnit",
    "src": "51:1775:30",
    "nodes": [
      {
        "id": 32407,
        "nodeType": "PragmaDirective",
        "src": "51:23:30",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 32409,
        "nodeType": "ImportDirective",
        "src": "76:42:30",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32618,
        "sourceUnit": 12439,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32408,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12438,
              "src": "85:4:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32411,
        "nodeType": "ImportDirective",
        "src": "119:42:30",
        "nodes": [],
        "absolutePath": "lib/forge-std/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32618,
        "sourceUnit": 3419,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32410,
              "name": "DSTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3418,
              "src": "128:6:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32413,
        "nodeType": "ImportDirective",
        "src": "162:60:30",
        "nodes": [],
        "absolutePath": "contracts/SimpleSwap.sol",
        "file": "../../contracts/SimpleSwap.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32618,
        "sourceUnit": 698,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32412,
              "name": "SimpleSwap",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 697,
              "src": "171:10:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32415,
        "nodeType": "ImportDirective",
        "src": "223:63:30",
        "nodes": [],
        "absolutePath": "contracts/test/TestERC20.sol",
        "file": "../../contracts/test/TestERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32618,
        "sourceUnit": 1127,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32414,
              "name": "TestERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1126,
              "src": "232:9:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32617,
        "nodeType": "ContractDefinition",
        "src": "288:1537:30",
        "nodes": [
          {
            "id": 32422,
            "nodeType": "VariableDeclaration",
            "src": "345:16:30",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "tokenA",
            "nameLocation": "355:6:30",
            "scope": 32617,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestERC20_$1126",
              "typeString": "contract TestERC20"
            },
            "typeName": {
              "id": 32421,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32420,
                "name": "TestERC20",
                "nameLocations": [
                  "345:9:30"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1126,
                "src": "345:9:30"
              },
              "referencedDeclaration": 1126,
              "src": "345:9:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestERC20_$1126",
                "typeString": "contract TestERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32425,
            "nodeType": "VariableDeclaration",
            "src": "367:16:30",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "tokenB",
            "nameLocation": "377:6:30",
            "scope": 32617,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestERC20_$1126",
              "typeString": "contract TestERC20"
            },
            "typeName": {
              "id": 32424,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32423,
                "name": "TestERC20",
                "nameLocations": [
                  "367:9:30"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1126,
                "src": "367:9:30"
              },
              "referencedDeclaration": 1126,
              "src": "367:9:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestERC20_$1126",
                "typeString": "contract TestERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32431,
            "nodeType": "VariableDeclaration",
            "src": "389:29:30",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "EOA",
            "nameLocation": "397:3:30",
            "scope": 32617,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 32426,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "389:7:30",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307831323334",
                  "id": 32429,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "411:6:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_4660_by_1",
                    "typeString": "int_const 4660"
                  },
                  "value": "0x1234"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_4660_by_1",
                    "typeString": "int_const 4660"
                  }
                ],
                "id": 32428,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "403:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 32427,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "403:7:30",
                  "typeDescriptions": {}
                }
              },
              "id": 32430,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "403:15:30",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32434,
            "nodeType": "VariableDeclaration",
            "src": "424:15:30",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "swap",
            "nameLocation": "435:4:30",
            "scope": 32617,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SimpleSwap_$697",
              "typeString": "contract SimpleSwap"
            },
            "typeName": {
              "id": 32433,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32432,
                "name": "SimpleSwap",
                "nameLocations": [
                  "424:10:30"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 697,
                "src": "424:10:30"
              },
              "referencedDeclaration": 697,
              "src": "424:10:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SimpleSwap_$697",
                "typeString": "contract SimpleSwap"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32456,
            "nodeType": "FunctionDefinition",
            "src": "446:131:30",
            "nodes": [],
            "body": {
              "id": 32455,
              "nodeType": "Block",
              "src": "470:107:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32437,
                      "name": "tokenA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32422,
                      "src": "480:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20_$1126",
                        "typeString": "contract TestERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "746f6b656e2041",
                          "id": 32441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "503:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_0947384fd3b7519ba210332a8164d9b8d124ae483086469d8b9de807cde1d526",
                            "typeString": "literal_string \"token A\""
                          },
                          "value": "token A"
                        },
                        {
                          "hexValue": "544b41",
                          "id": 32442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "514:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2487c49f05a4d0607f1ae07d97f7fbcb949677c47340370a6a8901d76e6d7481",
                            "typeString": "literal_string \"TKA\""
                          },
                          "value": "TKA"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_0947384fd3b7519ba210332a8164d9b8d124ae483086469d8b9de807cde1d526",
                            "typeString": "literal_string \"token A\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_2487c49f05a4d0607f1ae07d97f7fbcb949677c47340370a6a8901d76e6d7481",
                            "typeString": "literal_string \"TKA\""
                          }
                        ],
                        "id": 32440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "489:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_TestERC20_$1126_$",
                          "typeString": "function (string memory,string memory) returns (contract TestERC20)"
                        },
                        "typeName": {
                          "id": 32439,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32438,
                            "name": "TestERC20",
                            "nameLocations": [
                              "493:9:30"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1126,
                            "src": "493:9:30"
                          },
                          "referencedDeclaration": 1126,
                          "src": "493:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestERC20_$1126",
                            "typeString": "contract TestERC20"
                          }
                        }
                      },
                      "id": 32443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "489:31:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20_$1126",
                        "typeString": "contract TestERC20"
                      }
                    },
                    "src": "480:40:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20_$1126",
                      "typeString": "contract TestERC20"
                    }
                  },
                  "id": 32445,
                  "nodeType": "ExpressionStatement",
                  "src": "480:40:30"
                },
                {
                  "expression": {
                    "id": 32453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32446,
                      "name": "tokenB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32425,
                      "src": "530:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20_$1126",
                        "typeString": "contract TestERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "746f6b656e2042",
                          "id": 32450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "553:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_12919a5dc21cc79e187a4379b9e5f0be3596d6145e89d87c6dee64263c173f73",
                            "typeString": "literal_string \"token B\""
                          },
                          "value": "token B"
                        },
                        {
                          "hexValue": "544b42",
                          "id": 32451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "564:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ab61f3e2f61f385e65f7207e097e9653b89415bafbaff742c9593231971161ca",
                            "typeString": "literal_string \"TKB\""
                          },
                          "value": "TKB"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_12919a5dc21cc79e187a4379b9e5f0be3596d6145e89d87c6dee64263c173f73",
                            "typeString": "literal_string \"token B\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ab61f3e2f61f385e65f7207e097e9653b89415bafbaff742c9593231971161ca",
                            "typeString": "literal_string \"TKB\""
                          }
                        ],
                        "id": 32449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "539:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_TestERC20_$1126_$",
                          "typeString": "function (string memory,string memory) returns (contract TestERC20)"
                        },
                        "typeName": {
                          "id": 32448,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32447,
                            "name": "TestERC20",
                            "nameLocations": [
                              "543:9:30"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1126,
                            "src": "543:9:30"
                          },
                          "referencedDeclaration": 1126,
                          "src": "543:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestERC20_$1126",
                            "typeString": "contract TestERC20"
                          }
                        }
                      },
                      "id": 32452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "539:31:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20_$1126",
                        "typeString": "contract TestERC20"
                      }
                    },
                    "src": "530:40:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20_$1126",
                      "typeString": "contract TestERC20"
                    }
                  },
                  "id": 32454,
                  "nodeType": "ExpressionStatement",
                  "src": "530:40:30"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "455:5:30",
            "parameters": {
              "id": 32435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "460:2:30"
            },
            "returnParameters": {
              "id": 32436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "470:0:30"
            },
            "scope": 32617,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32478,
            "nodeType": "FunctionDefinition",
            "src": "583:190:30",
            "nodes": [],
            "body": {
              "id": 32477,
              "nodeType": "Block",
              "src": "650:123:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "53696d706c65537761703a20544f4b454e415f49535f4e4f545f434f4e5452414354",
                        "id": 32462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "676:36:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84a8f838bbe0991e22cc877cfa0ce4c12dc6be318401f8e4d91fdc209e86e2b9",
                          "typeString": "literal_string \"SimpleSwap: TOKENA_IS_NOT_CONTRACT\""
                        },
                        "value": "SimpleSwap: TOKENA_IS_NOT_CONTRACT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_84a8f838bbe0991e22cc877cfa0ce4c12dc6be318401f8e4d91fdc209e86e2b9",
                          "typeString": "literal_string \"SimpleSwap: TOKENA_IS_NOT_CONTRACT\""
                        }
                      ],
                      "expression": {
                        "id": 32459,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3471,
                        "src": "660:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 32461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "663:12:30",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13574,
                      "src": "660:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 32463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "660:53:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32464,
                  "nodeType": "ExpressionStatement",
                  "src": "660:53:30"
                },
                {
                  "expression": {
                    "id": 32475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32465,
                      "name": "swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32434,
                      "src": "723:4:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleSwap_$697",
                        "typeString": "contract SimpleSwap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32469,
                          "name": "EOA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32431,
                          "src": "745:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 32472,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32425,
                              "src": "758:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestERC20_$1126",
                                "typeString": "contract TestERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestERC20_$1126",
                                "typeString": "contract TestERC20"
                              }
                            ],
                            "id": 32471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "750:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 32470,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "750:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "750:15:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 32468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "730:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_SimpleSwap_$697_$",
                          "typeString": "function (address,address) returns (contract SimpleSwap)"
                        },
                        "typeName": {
                          "id": 32467,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32466,
                            "name": "SimpleSwap",
                            "nameLocations": [
                              "734:10:30"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 697,
                            "src": "734:10:30"
                          },
                          "referencedDeclaration": 697,
                          "src": "734:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SimpleSwap_$697",
                            "typeString": "contract SimpleSwap"
                          }
                        }
                      },
                      "id": 32474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "730:36:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleSwap_$697",
                        "typeString": "contract SimpleSwap"
                      }
                    },
                    "src": "723:43:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleSwap_$697",
                      "typeString": "contract SimpleSwap"
                    }
                  },
                  "id": 32476,
                  "nodeType": "ExpressionStatement",
                  "src": "723:43:30"
                }
              ]
            },
            "functionSelector": "a94dc3f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_revert_constructor_tokenA_is_not_a_contract",
            "nameLocation": "592:48:30",
            "parameters": {
              "id": 32457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "640:2:30"
            },
            "returnParameters": {
              "id": 32458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "650:0:30"
            },
            "scope": 32617,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32500,
            "nodeType": "FunctionDefinition",
            "src": "779:190:30",
            "nodes": [],
            "body": {
              "id": 32499,
              "nodeType": "Block",
              "src": "846:123:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "53696d706c65537761703a20544f4b454e425f49535f4e4f545f434f4e5452414354",
                        "id": 32484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "872:36:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_537bad8aa1ecdb312615adefe2b093ebfc486bfe8d67a0a3ea23156fb4fb8e65",
                          "typeString": "literal_string \"SimpleSwap: TOKENB_IS_NOT_CONTRACT\""
                        },
                        "value": "SimpleSwap: TOKENB_IS_NOT_CONTRACT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_537bad8aa1ecdb312615adefe2b093ebfc486bfe8d67a0a3ea23156fb4fb8e65",
                          "typeString": "literal_string \"SimpleSwap: TOKENB_IS_NOT_CONTRACT\""
                        }
                      ],
                      "expression": {
                        "id": 32481,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3471,
                        "src": "856:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 32483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "859:12:30",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13574,
                      "src": "856:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 32485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "856:53:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32486,
                  "nodeType": "ExpressionStatement",
                  "src": "856:53:30"
                },
                {
                  "expression": {
                    "id": 32497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32487,
                      "name": "swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32434,
                      "src": "919:4:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleSwap_$697",
                        "typeString": "contract SimpleSwap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 32493,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32422,
                              "src": "949:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestERC20_$1126",
                                "typeString": "contract TestERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestERC20_$1126",
                                "typeString": "contract TestERC20"
                              }
                            ],
                            "id": 32492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "941:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 32491,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "941:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "941:15:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 32495,
                          "name": "EOA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32431,
                          "src": "958:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 32490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "926:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_SimpleSwap_$697_$",
                          "typeString": "function (address,address) returns (contract SimpleSwap)"
                        },
                        "typeName": {
                          "id": 32489,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32488,
                            "name": "SimpleSwap",
                            "nameLocations": [
                              "930:10:30"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 697,
                            "src": "930:10:30"
                          },
                          "referencedDeclaration": 697,
                          "src": "930:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SimpleSwap_$697",
                            "typeString": "contract SimpleSwap"
                          }
                        }
                      },
                      "id": 32496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "926:36:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleSwap_$697",
                        "typeString": "contract SimpleSwap"
                      }
                    },
                    "src": "919:43:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleSwap_$697",
                      "typeString": "contract SimpleSwap"
                    }
                  },
                  "id": 32498,
                  "nodeType": "ExpressionStatement",
                  "src": "919:43:30"
                }
              ]
            },
            "functionSelector": "13320d3c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_revert_constructor_tokenB_is_not_a_contract",
            "nameLocation": "788:48:30",
            "parameters": {
              "id": 32479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "836:2:30"
            },
            "returnParameters": {
              "id": 32480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "846:0:30"
            },
            "scope": 32617,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32525,
            "nodeType": "FunctionDefinition",
            "src": "975:210:30",
            "nodes": [],
            "body": {
              "id": 32524,
              "nodeType": "Block",
              "src": "1041:144:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "53696d706c65537761703a20544f4b454e415f544f4b454e425f4944454e544943414c5f41444452455353",
                        "id": 32506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1067:45:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8321e4728cded84513e2b03d4afa90108e52a8bd9ab4f0af774cbb76c858e47a",
                          "typeString": "literal_string \"SimpleSwap: TOKENA_TOKENB_IDENTICAL_ADDRESS\""
                        },
                        "value": "SimpleSwap: TOKENA_TOKENB_IDENTICAL_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8321e4728cded84513e2b03d4afa90108e52a8bd9ab4f0af774cbb76c858e47a",
                          "typeString": "literal_string \"SimpleSwap: TOKENA_TOKENB_IDENTICAL_ADDRESS\""
                        }
                      ],
                      "expression": {
                        "id": 32503,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3471,
                        "src": "1051:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 32505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1054:12:30",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13574,
                      "src": "1051:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 32507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:62:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32508,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:62:30"
                },
                {
                  "expression": {
                    "id": 32522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32509,
                      "name": "swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32434,
                      "src": "1123:4:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleSwap_$697",
                        "typeString": "contract SimpleSwap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 32515,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32422,
                              "src": "1153:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestERC20_$1126",
                                "typeString": "contract TestERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestERC20_$1126",
                                "typeString": "contract TestERC20"
                              }
                            ],
                            "id": 32514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1145:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 32513,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1145:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1145:15:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 32519,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32422,
                              "src": "1170:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestERC20_$1126",
                                "typeString": "contract TestERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestERC20_$1126",
                                "typeString": "contract TestERC20"
                              }
                            ],
                            "id": 32518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1162:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 32517,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1162:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1162:15:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 32512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1130:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_SimpleSwap_$697_$",
                          "typeString": "function (address,address) returns (contract SimpleSwap)"
                        },
                        "typeName": {
                          "id": 32511,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32510,
                            "name": "SimpleSwap",
                            "nameLocations": [
                              "1134:10:30"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 697,
                            "src": "1134:10:30"
                          },
                          "referencedDeclaration": 697,
                          "src": "1134:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SimpleSwap_$697",
                            "typeString": "contract SimpleSwap"
                          }
                        }
                      },
                      "id": 32521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1130:48:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleSwap_$697",
                        "typeString": "contract SimpleSwap"
                      }
                    },
                    "src": "1123:55:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleSwap_$697",
                      "typeString": "contract SimpleSwap"
                    }
                  },
                  "id": 32523,
                  "nodeType": "ExpressionStatement",
                  "src": "1123:55:30"
                }
              ]
            },
            "functionSelector": "6287005b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_revert_constructor_tokenA_tokenB_identical",
            "nameLocation": "984:47:30",
            "parameters": {
              "id": 32501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1031:2:30"
            },
            "returnParameters": {
              "id": 32502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1041:0:30"
            },
            "scope": 32617,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32568,
            "nodeType": "FunctionDefinition",
            "src": "1191:313:30",
            "nodes": [],
            "body": {
              "id": 32567,
              "nodeType": "Block",
              "src": "1266:238:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32528,
                      "name": "swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32434,
                      "src": "1276:4:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleSwap_$697",
                        "typeString": "contract SimpleSwap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 32534,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32422,
                              "src": "1306:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestERC20_$1126",
                                "typeString": "contract TestERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestERC20_$1126",
                                "typeString": "contract TestERC20"
                              }
                            ],
                            "id": 32533,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1298:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 32532,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1298:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1298:15:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 32538,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32425,
                              "src": "1323:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestERC20_$1126",
                                "typeString": "contract TestERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestERC20_$1126",
                                "typeString": "contract TestERC20"
                              }
                            ],
                            "id": 32537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1315:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 32536,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1315:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1315:15:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 32531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1283:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_SimpleSwap_$697_$",
                          "typeString": "function (address,address) returns (contract SimpleSwap)"
                        },
                        "typeName": {
                          "id": 32530,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32529,
                            "name": "SimpleSwap",
                            "nameLocations": [
                              "1287:10:30"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 697,
                            "src": "1287:10:30"
                          },
                          "referencedDeclaration": 697,
                          "src": "1287:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SimpleSwap_$697",
                            "typeString": "contract SimpleSwap"
                          }
                        }
                      },
                      "id": 32540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1283:48:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleSwap_$697",
                        "typeString": "contract SimpleSwap"
                      }
                    },
                    "src": "1276:55:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleSwap_$697",
                      "typeString": "contract SimpleSwap"
                    }
                  },
                  "id": 32542,
                  "nodeType": "ExpressionStatement",
                  "src": "1276:55:30"
                },
                {
                  "assignments": [
                    32544
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32544,
                      "mutability": "mutable",
                      "name": "reserve1",
                      "nameLocation": "1349:8:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 32567,
                      "src": "1341:16:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32543,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1341:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32545,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1341:16:30"
                },
                {
                  "assignments": [
                    32547
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32547,
                      "mutability": "mutable",
                      "name": "reserve2",
                      "nameLocation": "1375:8:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 32567,
                      "src": "1367:16:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32546,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1367:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32548,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1367:16:30"
                },
                {
                  "expression": {
                    "id": 32555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 32549,
                          "name": "reserve1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32544,
                          "src": "1395:8:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 32550,
                          "name": "reserve2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32547,
                          "src": "1405:8:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 32551,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1394:20:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 32552,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32434,
                          "src": "1417:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SimpleSwap_$697",
                            "typeString": "contract SimpleSwap"
                          }
                        },
                        "id": 32553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1422:11:30",
                        "memberName": "getReserves",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 616,
                        "src": "1417:16:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function () view external returns (uint256,uint256)"
                        }
                      },
                      "id": 32554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1417:18:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "1394:41:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32556,
                  "nodeType": "ExpressionStatement",
                  "src": "1394:41:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32558,
                        "name": "reserve1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32544,
                        "src": "1454:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 32559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1464:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 32557,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3609,
                        3634,
                        3647,
                        3663,
                        3705,
                        3747,
                        3789,
                        3826,
                        3863,
                        3900,
                        1447,
                        1472,
                        1502,
                        1527,
                        1586,
                        1611,
                        1641,
                        1666,
                        3139,
                        3174
                      ],
                      "referencedDeclaration": 1641,
                      "src": "1445:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 32560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1445:21:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32561,
                  "nodeType": "ExpressionStatement",
                  "src": "1445:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32563,
                        "name": "reserve2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32547,
                        "src": "1485:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 32564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1495:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 32562,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3609,
                        3634,
                        3647,
                        3663,
                        3705,
                        3747,
                        3789,
                        3826,
                        3863,
                        3900,
                        1447,
                        1472,
                        1502,
                        1527,
                        1586,
                        1611,
                        1641,
                        1666,
                        3139,
                        3174
                      ],
                      "referencedDeclaration": 1641,
                      "src": "1476:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 32565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1476:21:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32566,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:21:30"
                }
              ]
            },
            "functionSelector": "57eabadf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_constructor_reserve_should_be_zero_after_initialize",
            "nameLocation": "1200:56:30",
            "parameters": {
              "id": 32526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1256:2:30"
            },
            "returnParameters": {
              "id": 32527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1266:0:30"
            },
            "scope": 32617,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32616,
            "nodeType": "FunctionDefinition",
            "src": "1510:313:30",
            "nodes": [],
            "body": {
              "id": 32615,
              "nodeType": "Block",
              "src": "1579:244:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32571,
                      "name": "swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32434,
                      "src": "1589:4:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleSwap_$697",
                        "typeString": "contract SimpleSwap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 32577,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32422,
                              "src": "1619:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestERC20_$1126",
                                "typeString": "contract TestERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestERC20_$1126",
                                "typeString": "contract TestERC20"
                              }
                            ],
                            "id": 32576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1611:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 32575,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1611:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1611:15:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 32581,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32425,
                              "src": "1636:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestERC20_$1126",
                                "typeString": "contract TestERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestERC20_$1126",
                                "typeString": "contract TestERC20"
                              }
                            ],
                            "id": 32580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1628:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 32579,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1628:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1628:15:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 32574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1596:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_SimpleSwap_$697_$",
                          "typeString": "function (address,address) returns (contract SimpleSwap)"
                        },
                        "typeName": {
                          "id": 32573,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32572,
                            "name": "SimpleSwap",
                            "nameLocations": [
                              "1600:10:30"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 697,
                            "src": "1600:10:30"
                          },
                          "referencedDeclaration": 697,
                          "src": "1600:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SimpleSwap_$697",
                            "typeString": "contract SimpleSwap"
                          }
                        }
                      },
                      "id": 32583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1596:48:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleSwap_$697",
                        "typeString": "contract SimpleSwap"
                      }
                    },
                    "src": "1589:55:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleSwap_$697",
                      "typeString": "contract SimpleSwap"
                    }
                  },
                  "id": 32585,
                  "nodeType": "ExpressionStatement",
                  "src": "1589:55:30"
                },
                {
                  "assignments": [
                    32587
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32587,
                      "mutability": "mutable",
                      "name": "swapTokenA",
                      "nameLocation": "1662:10:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 32615,
                      "src": "1654:18:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 32586,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1654:7:30",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32591,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 32588,
                        "name": "swap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32434,
                        "src": "1675:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleSwap_$697",
                          "typeString": "contract SimpleSwap"
                        }
                      },
                      "id": 32589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1680:9:30",
                      "memberName": "getTokenA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 626,
                      "src": "1675:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 32590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1675:16:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1654:37:30"
                },
                {
                  "assignments": [
                    32593
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32593,
                      "mutability": "mutable",
                      "name": "swapTokenB",
                      "nameLocation": "1709:10:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 32615,
                      "src": "1701:18:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 32592,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1701:7:30",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32597,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 32594,
                        "name": "swap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32434,
                        "src": "1722:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleSwap_$697",
                          "typeString": "contract SimpleSwap"
                        }
                      },
                      "id": 32595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1727:9:30",
                      "memberName": "getTokenB",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 636,
                      "src": "1722:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 32596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1722:16:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1701:37:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 32603,
                                "name": "swapTokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32587,
                                "src": "1773:10:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 32602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1765:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": {
                                "id": 32601,
                                "name": "uint160",
                                "nodeType": "ElementaryTypeName",
                                "src": "1765:7:30",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1765:19:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 32600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1757:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 32599,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1757:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1757:28:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 32610,
                                "name": "swapTokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32593,
                                "src": "1803:10:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 32609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1795:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": {
                                "id": 32608,
                                "name": "uint160",
                                "nodeType": "ElementaryTypeName",
                                "src": "1795:7:30",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1795:19:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 32607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1787:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 32606,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1787:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1787:28:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32598,
                      "name": "assertLe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2895,
                        2920,
                        2950,
                        2975
                      ],
                      "referencedDeclaration": 2895,
                      "src": "1748:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 32613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1748:68:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32614,
                  "nodeType": "ExpressionStatement",
                  "src": "1748:68:30"
                }
              ]
            },
            "functionSelector": "96111de8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_constructor_tokenA_should_be_less_than_tokenB",
            "nameLocation": "1519:50:30",
            "parameters": {
              "id": 32569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1569:2:30"
            },
            "returnParameters": {
              "id": 32570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1579:0:30"
            },
            "scope": 32617,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32416,
              "name": "DSTest",
              "nameLocations": [
                "326:6:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3418,
              "src": "326:6:30"
            },
            "id": 32417,
            "nodeType": "InheritanceSpecifier",
            "src": "326:6:30"
          },
          {
            "baseName": {
              "id": 32418,
              "name": "Test",
              "nameLocations": [
                "334:4:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12438,
              "src": "334:4:30"
            },
            "id": 32419,
            "nodeType": "InheritanceSpecifier",
            "src": "334:4:30"
          }
        ],
        "canonicalName": "SimpleSwapConstructorTest",
        "contractDependencies": [
          697,
          1126
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32617,
          12438,
          3478,
          3475,
          12389,
          8168,
          7878,
          7199,
          5602,
          4908,
          3418
        ],
        "name": "SimpleSwapConstructorTest",
        "nameLocation": "297:25:30",
        "scope": 32618,
        "usedErrors": []
      }
    ],
    "license": "SEE LICENSE IN LICENSE"
  },
  "id": 30
}